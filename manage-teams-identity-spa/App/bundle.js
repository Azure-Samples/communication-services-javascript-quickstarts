/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./authConfig.js":
/*!***********************!*\
  !*** ./authConfig.js ***!
  \***********************/
/*! exports provided: msalConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msalConfig\", function() { return msalConfig; });\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n * For more details on using MSAL.js with Azure AD B2C, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/working-with-b2c.md \r\n */\r\n\r\n const msalConfig = {\r\n    auth: {\r\n      clientId: \"1875691f-131f-4802-95a5-4511bde1408e\",\r\n      redirectUri: \"http://localhost:3000/spa\", // You must register this URI on Azure Portal/App Registration. Defaults to \"window.location.href\".\r\n    },\r\n    cache: {\r\n      cacheLocation: \"sessionStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n      storeAuthStateInCookie: false, // If you wish to store cache items in cookies as well as browser cache, set this to \"true\".\r\n    },\r\n    system: {\r\n      loggerOptions: {\r\n        loggerCallback: (level, message, containsPii) => {\r\n          if (containsPii) {\r\n            return;\r\n          }\r\n          switch (level) {\r\n            case msal.LogLevel.Error:\r\n              console.error(message);\r\n              return;\r\n            case msal.LogLevel.Info:\r\n              console.info(message);\r\n              return;\r\n            case msal.LogLevel.Verbose:\r\n              console.debug(message);\r\n              return;\r\n            case msal.LogLevel.Warning:\r\n              console.warn(message);\r\n              return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\n\n//# sourceURL=webpack:///./authConfig.js?");

/***/ }),

/***/ "./client.js":
/*!*******************!*\
  !*** ./client.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _azure_communication_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/communication-common */ \"./node_modules/@azure/communication-common/dist-esm/src/index.js\");\n/* harmony import */ var _ui_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ui.js */ \"./ui.js\");\n/* harmony import */ var _authConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authConfig.js */ \"./authConfig.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jwt-decode */ \"./node_modules/jwt-decode/build/jwt-decode.esm.js\");\n\r\n\r\n\r\n\r\n\r\n// Create the main myMSALObj instance\r\n// The configuration parameters are located at authConfig.js\r\nconst myMSALObj = new msal.PublicClientApplication(_authConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"msalConfig\"]);\r\n\r\nlet accountId = \"\";\r\n\r\nconst setAccount = function (account) {\r\n  accountId = account.homeAccountId;\r\n  Object(_ui_js__WEBPACK_IMPORTED_MODULE_1__[\"welcomeUser\"])(account.username);\r\n}\r\n\r\nconst selectAccount = function () {\r\n  /**\r\n   * See here for more info on account retrieval: \r\n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/Accounts.md\r\n   */\r\n\r\n  const currentAccounts = myMSALObj.getAllAccounts();\r\n\r\n  if (currentAccounts.length < 1) {\r\n    return;\r\n  } else if (currentAccounts.length > 1) {\r\n\r\n    /**\r\n     * Due to the way MSAL caches account objects, the auth response from initiating a user-flow\r\n     * is cached as a new account, which results in more than one account in the cache. Here we make\r\n     * sure we are selecting the account with homeAccountId that contains the sign-up/sign-in user-flow, \r\n     * as this is the default flow the user initially signed-in with.\r\n     */\r\n    const accounts = currentAccounts.filter(account =>\r\n\r\n      account.idTokenClaims.aud === _authConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"msalConfig\"].auth.clientId\r\n    );\r\n\r\n    if (accounts.length > 1) {\r\n      // localAccountId identifies the entity for which the token asserts information.\r\n      if (accounts.every(account => account.localAccountId === accounts[0].localAccountId)) {\r\n        // All accounts belong to the same user\r\n        setAccount(accounts[0]);\r\n      } else {\r\n        // Multiple users detected. Logout all to be safe.\r\n        signOut();\r\n      };\r\n    } else if (accounts.length === 1) {\r\n      setAccount(accounts[0]);\r\n    }\r\n\r\n  } else if (currentAccounts.length === 1) {\r\n    setAccount(currentAccounts[0]);\r\n  }\r\n}\r\n\r\nconst handleResponse = function (response) {\r\n  /**\r\n   * To see the full list of response object properties, visit:\r\n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md#response\r\n   */\r\n\r\n  if (response !== null) {\r\n    setAccount(response.account);\r\n  } else {\r\n    selectAccount();\r\n  }\r\n}\r\n\r\nconst signIn = function () {\r\n\r\n  /**\r\n   * You can pass a custom request object below. This will override the initial configuration. For more information, visit:\r\n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md#request\r\n   */\r\n\r\n  myMSALObj.loginPopup({\r\n    scopes: [\"openid\"], // By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n    prompt: 'select_account'\r\n  })\r\n    .then(handleResponse)\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nconst signOut = function () {\r\n\r\n  /**\r\n   * You can pass a custom request object below. This will override the initial configuration. For more information, visit:\r\n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md#request\r\n   */\r\n\r\n  const logoutRequest = {\r\n    postLogoutRedirectUri: _authConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"msalConfig\"].auth.redirectUri,\r\n    mainWindowRedirectUri: _authConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"msalConfig\"].auth.redirectUri\r\n  };\r\n\r\n  myMSALObj.logoutPopup(logoutRequest);\r\n}\r\n\r\n\r\nconst acquireAadToken = function (request) {\r\n  /**\r\n  * See here for more information on account retrieval: \r\n  * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/Accounts.md\r\n  */\r\n  request.account = myMSALObj.getAccountByHomeId(accountId);\r\n  request.forceRefresh = false; // set to true to skip the cache\r\n\r\n  return myMSALObj.acquireTokenSilent(request).then(function (accessTokenResponse) {\r\n    if (!accessTokenResponse.accessToken || accessTokenResponse.accessToken === \"\") {\r\n      throw new msal.InteractionRequiredAuthError;\r\n    }\r\n    // Acquire token silent success  \r\n    return accessTokenResponse.accessToken;\r\n  }).catch(function (error) {\r\n    console.log(\"Silent token acquisition fails. Acquiring token using popup. \\n\", error);\r\n    // Acquire token silent failure, and send an interactive request\r\n    if (error instanceof msal.InteractionRequiredAuthError) {\r\n      myMSALObj.acquireTokenPopup(request).then(function (accessTokenResponse) {\r\n        // Acquire token interactive success   \r\n        console.log(accessTokenResponse);\r\n        return accessTokenResponse.accessToken;\r\n      }).catch(function (interactiveError) {\r\n        // Acquire token interactive failure\r\n        console.log(interactiveError);\r\n      });\r\n    }\r\n    console.log(error);\r\n  });\r\n}\r\n\r\n\r\nconst getCommunicationTokenForTeamsUser = async function () {\r\n  /** \r\n  * Acquire a token with a scope of Contoso's Azure AD app\r\n  * For the simplicity of this sample, we are using the .default scope. In a real-world scenario, this would be a custom scope.\r\n  * To do that, follow the tutorial at https://docs.microsoft.com/azure/active-directory/develop/quickstart-configure-app-expose-web-apis\r\n  */\r\n  let apiAccessToken = await acquireAadToken({ scopes: [`${_authConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"msalConfig\"].auth.clientId}/.default`] })\r\n\r\n  // Acquire a token with delegated permissions Teams.ManageCalls and Teams.ManageChats\r\n  let teamsUserAccessToken = await acquireAadToken({\r\n    scopes:\r\n      [\r\n        \"https://auth.msft.communication.azure.com/Teams.ManageCalls\",\r\n        \"https://auth.msft.communication.azure.com/Teams.ManageChats\"\r\n      ]\r\n  });\r\n\r\n  // Call the backend API for token exchange\r\n  if (apiAccessToken !== null && teamsUserAccessToken !== null) {\r\n    try {\r\n      const response = await fetch(\"/exchange\", {\r\n        method: \"POST\",\r\n        // Use API access token for authentication\r\n        headers: [[\"Authorization\", `Bearer ${apiAccessToken}`], [\"Content-Type\", \"application/json\"]],\r\n        // Use Teams user access token as payload\r\n        body: JSON.stringify({ accessToken: teamsUserAccessToken })\r\n      });\r\n      const json = await response.json();\r\n      if (json) {\r\n        return json.token;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst displayToken = async function () {\r\n  // Initialize a credential object that can be used for Calling (to create a callAgent)\r\n  const tokenCredential = new _azure_communication_common__WEBPACK_IMPORTED_MODULE_0__[\"AzureCommunicationTokenCredential\"](\r\n    {\r\n      tokenRefresher: async () => getCommunicationTokenForTeamsUser(),\r\n      refreshProactively: true,\r\n    });\r\n  const token = await tokenCredential.getToken();\r\n  const decoded = Object(jwt_decode__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(token.token);\r\n  Object(_ui_js__WEBPACK_IMPORTED_MODULE_1__[\"renderToken\"])(decoded);\r\n}\r\n\r\n// Start the app\r\nObject(_ui_js__WEBPACK_IMPORTED_MODULE_1__[\"initUI\"])(signIn, signOut, displayToken);\r\n// in case of page refresh\r\nselectAccount();\n\n//# sourceURL=webpack:///./client.js?");

/***/ }),

/***/ "./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js ***!
  \******************************************************************************/
/*! exports provided: AbortError, AbortController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbortError\", function() { return AbortError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbortController\", function() { return AbortController; });\n/* harmony import */ var _AbortSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortSignal */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nclass AbortController {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(parentSignals) {\n        this._signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_0__[\"AbortSignal\"]();\n        if (!parentSignals) {\n            return;\n        }\n        // coerce parentSignals into an array\n        if (!Array.isArray(parentSignals)) {\n            // eslint-disable-next-line prefer-rest-params\n            parentSignals = arguments;\n        }\n        for (const parentSignal of parentSignals) {\n            // if the parent signal has already had abort() called,\n            // then call abort on this signal as well.\n            if (parentSignal.aborted) {\n                this.abort();\n            }\n            else {\n                // when the parent signal aborts, this signal should as well.\n                parentSignal.addEventListener(\"abort\", () => {\n                    this.abort();\n                });\n            }\n        }\n    }\n    /**\n     * The AbortSignal associated with this controller that will signal aborted\n     * when the abort method is called on this controller.\n     *\n     * @readonly\n     */\n    get signal() {\n        return this._signal;\n    }\n    /**\n     * Signal that any operations passed this controller's associated abort signal\n     * to cancel any remaining work and throw an `AbortError`.\n     */\n    abort() {\n        Object(_AbortSignal__WEBPACK_IMPORTED_MODULE_0__[\"abortSignal\"])(this._signal);\n    }\n    /**\n     * Creates a new AbortSignal instance that will abort after the provided ms.\n     * @param ms - Elapsed time in milliseconds to trigger an abort.\n     */\n    static timeout(ms) {\n        const signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_0__[\"AbortSignal\"]();\n        const timer = setTimeout(_AbortSignal__WEBPACK_IMPORTED_MODULE_0__[\"abortSignal\"], ms, signal);\n        // Prevent the active Timer from keeping the Node.js event loop active.\n        if (typeof timer.unref === \"function\") {\n            timer.unref();\n        }\n        return signal;\n    }\n}\n//# sourceMappingURL=AbortController.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js?");

/***/ }),

/***/ "./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js ***!
  \**************************************************************************/
/*! exports provided: AbortSignal, abortSignal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbortSignal\", function() { return AbortSignal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"abortSignal\", function() { return abortSignal; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference path=\"../shims-public.d.ts\" />\nconst listenersMap = new WeakMap();\nconst abortedMap = new WeakMap();\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nclass AbortSignal {\n    constructor() {\n        /**\n         * onabort event listener.\n         */\n        this.onabort = null;\n        listenersMap.set(this, []);\n        abortedMap.set(this, false);\n    }\n    /**\n     * Status of whether aborted or not.\n     *\n     * @readonly\n     */\n    get aborted() {\n        if (!abortedMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        return abortedMap.get(this);\n    }\n    /**\n     * Creates a new AbortSignal instance that will never be aborted.\n     *\n     * @readonly\n     */\n    static get none() {\n        return new AbortSignal();\n    }\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be added\n     */\n    addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        const listeners = listenersMap.get(this);\n        listeners.push(listener);\n    }\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be removed\n     */\n    removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        const listeners = listenersMap.get(this);\n        const index = listeners.indexOf(listener);\n        if (index > -1) {\n            listeners.splice(index, 1);\n        }\n    }\n    /**\n     * Dispatches a synthetic event to the AbortSignal.\n     */\n    dispatchEvent(_event) {\n        throw new Error(\"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\");\n    }\n}\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction abortSignal(signal) {\n    if (signal.aborted) {\n        return;\n    }\n    if (signal.onabort) {\n        signal.onabort.call(signal);\n    }\n    const listeners = listenersMap.get(signal);\n    if (listeners) {\n        // Create a copy of listeners so mutations to the array\n        // (e.g. via removeListener calls) don't affect the listeners\n        // we invoke.\n        listeners.slice().forEach((listener) => {\n            listener.call(signal, { type: \"abort\" });\n        });\n    }\n    abortedMap.set(signal, true);\n}\n//# sourceMappingURL=AbortSignal.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js?");

/***/ }),

/***/ "./node_modules/@azure/abort-controller/dist-esm/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist-esm/src/index.js ***!
  \********************************************************************/
/*! exports provided: AbortController, AbortError, AbortSignal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _AbortController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortController */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AbortController\", function() { return _AbortController__WEBPACK_IMPORTED_MODULE_0__[\"AbortController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AbortError\", function() { return _AbortController__WEBPACK_IMPORTED_MODULE_0__[\"AbortError\"]; });\n\n/* harmony import */ var _AbortSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbortSignal */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AbortSignal\", function() { return _AbortSignal__WEBPACK_IMPORTED_MODULE_1__[\"AbortSignal\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// Changes to Aborter\n// * Rename Aborter to AbortSignal\n// * Remove withValue and getValue - async context should be solved differently/wholistically, not tied to cancellation\n// * Remove withTimeout, it's moved to the controller\n// * AbortSignal constructor no longer takes a parent. Cancellation graphs are created from the controller.\n// Potential changes to align with DOM Spec\n// * dispatchEvent on Signal\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/abort-controller/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js ***!
  \*********************************************************************************************/
/*! exports provided: AutoRefreshTokenCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AutoRefreshTokenCredential\", function() { return AutoRefreshTokenCredential; });\n/* harmony import */ var _tokenParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenParser */ \"./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst expiredToken = { token: \"\", expiresOnTimestamp: -10 };\nconst minutesToMs = (minutes) => minutes * 1000 * 60;\nconst defaultRefreshingInterval = minutesToMs(10);\nclass AutoRefreshTokenCredential {\n    constructor(refreshArgs) {\n        this.refreshingIntervalInMs = defaultRefreshingInterval;\n        this.activeTokenFetching = null;\n        this.activeTokenUpdating = null;\n        this.disposed = false;\n        const { tokenRefresher, token, refreshProactively } = refreshArgs;\n        this.refresh = tokenRefresher;\n        this.currentToken = token ? Object(_tokenParser__WEBPACK_IMPORTED_MODULE_0__[\"parseToken\"])(token) : expiredToken;\n        this.refreshProactively = refreshProactively !== null && refreshProactively !== void 0 ? refreshProactively : false;\n        if (this.refreshProactively) {\n            this.scheduleRefresh();\n        }\n    }\n    async getToken(options) {\n        if (!this.isCurrentTokenExpiringSoon) {\n            return this.currentToken;\n        }\n        const updatePromise = this.updateTokenAndReschedule(options === null || options === void 0 ? void 0 : options.abortSignal);\n        if (!this.isCurrentTokenValid) {\n            await updatePromise;\n        }\n        return this.currentToken;\n    }\n    dispose() {\n        this.disposed = true;\n        this.activeTokenFetching = null;\n        this.activeTokenUpdating = null;\n        this.currentToken = expiredToken;\n        if (this.activeTimeout) {\n            clearTimeout(this.activeTimeout);\n        }\n    }\n    async updateTokenAndReschedule(abortSignal) {\n        if (this.activeTokenUpdating) {\n            return this.activeTokenUpdating;\n        }\n        this.activeTokenUpdating = this.refreshTokenAndReschedule(abortSignal);\n        try {\n            await this.activeTokenUpdating;\n        }\n        finally {\n            this.activeTokenUpdating = null;\n        }\n    }\n    async refreshTokenAndReschedule(abortSignal) {\n        this.currentToken = await this.refreshToken(abortSignal);\n        if (this.refreshProactively) {\n            this.scheduleRefresh();\n        }\n    }\n    async refreshToken(abortSignal) {\n        try {\n            if (!this.activeTokenFetching) {\n                this.activeTokenFetching = this.refresh(abortSignal);\n            }\n            return Object(_tokenParser__WEBPACK_IMPORTED_MODULE_0__[\"parseToken\"])(await this.activeTokenFetching);\n        }\n        finally {\n            this.activeTokenFetching = null;\n        }\n    }\n    scheduleRefresh() {\n        if (this.disposed) {\n            return;\n        }\n        if (this.activeTimeout) {\n            clearTimeout(this.activeTimeout);\n        }\n        const timespanInMs = this.currentToken.expiresOnTimestamp - Date.now() - this.refreshingIntervalInMs;\n        this.activeTimeout = setTimeout(() => this.updateTokenAndReschedule(), timespanInMs);\n    }\n    get isCurrentTokenValid() {\n        return this.currentToken && Date.now() < this.currentToken.expiresOnTimestamp;\n    }\n    get isCurrentTokenExpiringSoon() {\n        return (!this.currentToken ||\n            Date.now() >= this.currentToken.expiresOnTimestamp - this.refreshingIntervalInMs);\n    }\n}\n//# sourceMappingURL=autoRefreshTokenCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js ***!
  \***********************************************************************************************/
/*! exports provided: AzureCommunicationTokenCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AzureCommunicationTokenCredential\", function() { return AzureCommunicationTokenCredential; });\n/* harmony import */ var _tokenParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenParser */ \"./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js\");\n/* harmony import */ var _staticTokenCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./staticTokenCredential */ \"./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js\");\n/* harmony import */ var _autoRefreshTokenCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./autoRefreshTokenCredential */ \"./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * The CommunicationTokenCredential implementation with support for proactive token refresh.\n */\nclass AzureCommunicationTokenCredential {\n    constructor(tokenOrRefreshOptions) {\n        this.disposed = false;\n        if (typeof tokenOrRefreshOptions === \"string\") {\n            this.tokenCredential = new _staticTokenCredential__WEBPACK_IMPORTED_MODULE_1__[\"StaticTokenCredential\"](Object(_tokenParser__WEBPACK_IMPORTED_MODULE_0__[\"parseToken\"])(tokenOrRefreshOptions));\n        }\n        else {\n            this.tokenCredential = new _autoRefreshTokenCredential__WEBPACK_IMPORTED_MODULE_2__[\"AutoRefreshTokenCredential\"](tokenOrRefreshOptions);\n        }\n    }\n    /**\n     * Gets an `AccessToken` for the user. Throws if already disposed.\n     * @param abortSignal - An implementation of `AbortSignalLike` to cancel the operation.\n     */\n    async getToken(options) {\n        this.throwIfDisposed();\n        const token = await this.tokenCredential.getToken(options);\n        this.throwIfDisposed();\n        return token;\n    }\n    /**\n     * Disposes the CommunicationTokenCredential and cancels any internal auto-refresh operation.\n     */\n    dispose() {\n        this.disposed = true;\n        this.tokenCredential.dispose();\n    }\n    throwIfDisposed() {\n        if (this.disposed) {\n            throw new Error(\"User credential is disposed\");\n        }\n    }\n}\n//# sourceMappingURL=communicationTokenCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/clientArguments.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/clientArguments.js ***!
  \*********************************************************************************************/
/*! exports provided: isKeyCredential, parseClientArguments */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isKeyCredential\", function() { return isKeyCredential; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseClientArguments\", function() { return parseClientArguments; });\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/index.js\");\n/* harmony import */ var _azure_core_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-http */ \"./node_modules/@azure/core-http/dist-esm/src/coreHttp.js\");\n/* harmony import */ var _connectionString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connectionString */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/connectionString.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst isValidEndpoint = (host) => {\n    var _a;\n    const url = _azure_core_http__WEBPACK_IMPORTED_MODULE_1__[\"URLBuilder\"].parse(host);\n    return (!!((_a = url.getScheme()) === null || _a === void 0 ? void 0 : _a.match(/^http[s]?/)) &&\n        url.getHost() !== undefined &&\n        url.getHost() !== \"\" &&\n        (url.getPath() === undefined || url.getPath() === \"\" || url.getPath() === \"/\"));\n};\nconst assertValidEndpoint = (host) => {\n    if (!isValidEndpoint(host)) {\n        throw new Error(`Invalid endpoint url ${host}`);\n    }\n};\n/**\n * Checks whether a value is a KeyCredential.\n *\n * @param credential - The credential being checked.\n */\nconst isKeyCredential = (credential) => {\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.key === \"string\" &&\n        castCredential.getToken === undefined);\n};\n/**\n * Parses arguments passed to a communication client.\n * @hidden\n */\nconst parseClientArguments = (connectionStringOrUrl, credentialOrOptions) => {\n    if (isKeyCredential(credentialOrOptions) || Object(_azure_core_auth__WEBPACK_IMPORTED_MODULE_0__[\"isTokenCredential\"])(credentialOrOptions)) {\n        assertValidEndpoint(connectionStringOrUrl);\n        return { url: connectionStringOrUrl, credential: credentialOrOptions };\n    }\n    else {\n        const { endpoint: host, credential } = Object(_connectionString__WEBPACK_IMPORTED_MODULE_2__[\"parseConnectionString\"])(connectionStringOrUrl);\n        assertValidEndpoint(host);\n        return { url: host, credential };\n    }\n};\n//# sourceMappingURL=clientArguments.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/clientArguments.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAccessKeyCredentialPolicy.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAccessKeyCredentialPolicy.js ***!
  \********************************************************************************************************************/
/*! exports provided: createCommunicationAccessKeyCredentialPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAccessKeyCredentialPolicy\", function() { return createCommunicationAccessKeyCredentialPolicy; });\n/* harmony import */ var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-http */ \"./node_modules/@azure/core-http/dist-esm/src/coreHttp.js\");\n/* harmony import */ var _cryptoUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cryptoUtils */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/cryptoUtils.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Creates an HTTP pipeline policy to authenticate a request using a `KeyCredential`.\n * @hidden\n *\n * @param credential - The key credential.\n */\nconst createCommunicationAccessKeyCredentialPolicy = (credential) => {\n    return {\n        create: (nextpolicy, options) => {\n            return new CommunicationAccessKeyCredentialPolicy(credential, nextpolicy, options);\n        }\n    };\n};\n/**\n * CommunicationAccessKeyCredentialPolicy provides a means of signing requests made through\n * the SmsClient.\n */\nclass CommunicationAccessKeyCredentialPolicy extends _azure_core_http__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    /**\n     * Initializes a new instance of the CommunicationAccessKeyCredential class\n     * using a base64 encoded key.\n     * @param accessKey - The base64 encoded key to be used for signing.\n     */\n    constructor(accessKey, nextPolicy, options) {\n        super(nextPolicy, options);\n        this.accessKey = accessKey;\n    }\n    /**\n     * Signs a request with the provided access key.\n     *\n     * @param webResource - The WebResource to be signed.\n     */\n    async signRequest(webResource) {\n        const verb = webResource.method.toUpperCase();\n        const utcNow = new Date().toUTCString();\n        const contentHash = await Object(_cryptoUtils__WEBPACK_IMPORTED_MODULE_1__[\"shaHash\"])(webResource.body || \"\");\n        const dateHeader = \"x-ms-date\";\n        const signedHeaders = `${dateHeader};host;x-ms-content-sha256`;\n        const url = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__[\"URLBuilder\"].parse(webResource.url);\n        const query = url.getQuery();\n        const urlPathAndQuery = query ? `${url.getPath()}?${query}` : url.getPath();\n        const port = url.getPort();\n        const hostAndPort = port ? `${url.getHost()}:${port}` : url.getHost();\n        const stringToSign = `${verb}\\n${urlPathAndQuery}\\n${utcNow};${hostAndPort};${contentHash}`;\n        const signature = await Object(_cryptoUtils__WEBPACK_IMPORTED_MODULE_1__[\"shaHMAC\"])(this.accessKey.key, stringToSign);\n        if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__[\"isNode\"]) {\n            webResource.headers.set(\"Host\", hostAndPort || \"\");\n        }\n        webResource.headers.set(dateHeader, utcNow);\n        webResource.headers.set(\"x-ms-content-sha256\", contentHash);\n        webResource.headers.set(\"Authorization\", `HMAC-SHA256 SignedHeaders=${signedHeaders}&Signature=${signature}`);\n        return webResource;\n    }\n    /**\n     * Signs the request and calls the next policy in the factory.\n     */\n    async sendRequest(webResource) {\n        if (!webResource) {\n            throw new Error(\"webResource cannot be null or undefined\");\n        }\n        return this._nextPolicy.sendRequest(await this.signRequest(webResource));\n    }\n}\n//# sourceMappingURL=communicationAccessKeyCredentialPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAccessKeyCredentialPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAuthPolicy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAuthPolicy.js ***!
  \*****************************************************************************************************/
/*! exports provided: createCommunicationAuthPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAuthPolicy\", function() { return createCommunicationAuthPolicy; });\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/index.js\");\n/* harmony import */ var _azure_core_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-http */ \"./node_modules/@azure/core-http/dist-esm/src/coreHttp.js\");\n/* harmony import */ var _communicationAccessKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./communicationAccessKeyCredentialPolicy */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAccessKeyCredentialPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Creates a pipeline policy to authenticate request based\n * on the credential passed in.\n * @hidden\n *\n * @param credential - The KeyCredential or TokenCredential.\n */\nconst createCommunicationAuthPolicy = (credential) => {\n    if (Object(_azure_core_auth__WEBPACK_IMPORTED_MODULE_0__[\"isTokenCredential\"])(credential)) {\n        return Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__[\"bearerTokenAuthenticationPolicy\"])(credential, \"https://communication.azure.com//.default\");\n    }\n    else {\n        return Object(_communicationAccessKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_2__[\"createCommunicationAccessKeyCredentialPolicy\"])(credential);\n    }\n};\n//# sourceMappingURL=communicationAuthPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAuthPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/connectionString.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/connectionString.js ***!
  \**********************************************************************************************/
/*! exports provided: parseConnectionString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseConnectionString\", function() { return parseConnectionString; });\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// TODO: update when connection string format is finalized\nconst CONNECTION_STRING_REGEX = /endpoint=(.*);accesskey=(.*)/i;\nconst tryParseConnectionString = (s) => {\n    const match = s.match(CONNECTION_STRING_REGEX);\n    if ((match === null || match === void 0 ? void 0 : match[1]) && match[2]) {\n        return { endpoint: match[1], credential: new _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__[\"AzureKeyCredential\"](match[2]) };\n    }\n    return undefined;\n};\n/**\n * Returns an EndpointCredential to easily access properties of the connection string.\n * @hidden\n *\n * @param connectionString - The connection string to parse\n * @returns Object to access the endpoint and the credenials\n */\nconst parseConnectionString = (connectionString) => {\n    const parsedConnectionString = tryParseConnectionString(connectionString);\n    if (parsedConnectionString) {\n        return parsedConnectionString;\n    }\n    else {\n        throw new Error(`Invalid connection string ${connectionString}`);\n    }\n};\n//# sourceMappingURL=connectionString.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/connectionString.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/cryptoUtils.browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/cryptoUtils.browser.js ***!
  \*************************************************************************************************/
/*! exports provided: shaHash, shaHMAC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shaHash\", function() { return shaHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shaHMAC\", function() { return shaHMAC; });\n/* harmony import */ var _encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodeUtils.browser */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/encodeUtils.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst globalRef = globalThis;\nconst getCrypto = () => {\n    if (!globalRef) {\n        throw new Error(\"Could not find global\");\n    }\n    if (!globalRef.crypto || !globalRef.crypto.subtle) {\n        throw new Error(\"Browser does not support cryptography functions\");\n    }\n    return globalRef.crypto.subtle;\n};\nconst shaHash = async (content) => {\n    const data = Object(_encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__[\"encodeUTF8\"])(content);\n    const hash = await getCrypto().digest(\"SHA-256\", data);\n    return Object(_encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__[\"encodeBase64\"])(hash);\n};\nconst shaHMAC = async (secret, content) => {\n    const importParams = { name: \"HMAC\", hash: { name: \"SHA-256\" } };\n    const encodedMessage = Object(_encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__[\"encodeUTF8\"])(content);\n    const encodedKey = Object(_encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__[\"encodeUTF8fromBase64\"])(secret);\n    const crypto = getCrypto();\n    const cryptoKey = await crypto.importKey(\"raw\", encodedKey, importParams, false, [\"sign\"]);\n    const signature = await crypto.sign(importParams, cryptoKey, encodedMessage);\n    return Object(_encodeUtils_browser__WEBPACK_IMPORTED_MODULE_0__[\"encodeBase64\"])(signature);\n};\n//# sourceMappingURL=cryptoUtils.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/cryptoUtils.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/encodeUtils.browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/encodeUtils.browser.js ***!
  \*************************************************************************************************/
/*! exports provided: encodeUTF8, encodeUTF8fromBase64, encodeBase64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeUTF8\", function() { return encodeUTF8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeUTF8fromBase64\", function() { return encodeUTF8fromBase64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeBase64\", function() { return encodeBase64; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst encodeUTF8 = (str) => new TextEncoder().encode(str);\nfunction encodeUTF8fromBase64(str) {\n    if (typeof atob !== \"function\") {\n        throw new Error(\"Your browser environment is missing the global `atob` function\");\n    }\n    const binary = atob(str);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction encodeBase64(value) {\n    if (typeof btoa !== \"function\") {\n        throw new Error(\"Your browser environment is missing the global `btoa` function\");\n    }\n    const bytes = new Uint8Array(value);\n    let binary = \"\";\n    for (const byte of bytes) {\n        binary += String.fromCharCode(byte);\n    }\n    return btoa(binary);\n}\n//# sourceMappingURL=encodeUtils.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/encodeUtils.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/credential/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/credential/index.js ***!
  \***********************************************************************************/
/*! exports provided: createCommunicationAccessKeyCredentialPolicy, createCommunicationAuthPolicy, isKeyCredential, parseClientArguments, parseConnectionString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _communicationAccessKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./communicationAccessKeyCredentialPolicy */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAccessKeyCredentialPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAccessKeyCredentialPolicy\", function() { return _communicationAccessKeyCredentialPolicy__WEBPACK_IMPORTED_MODULE_0__[\"createCommunicationAccessKeyCredentialPolicy\"]; });\n\n/* harmony import */ var _communicationAuthPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./communicationAuthPolicy */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/communicationAuthPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAuthPolicy\", function() { return _communicationAuthPolicy__WEBPACK_IMPORTED_MODULE_1__[\"createCommunicationAuthPolicy\"]; });\n\n/* harmony import */ var _clientArguments__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clientArguments */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/clientArguments.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isKeyCredential\", function() { return _clientArguments__WEBPACK_IMPORTED_MODULE_2__[\"isKeyCredential\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseClientArguments\", function() { return _clientArguments__WEBPACK_IMPORTED_MODULE_2__[\"parseClientArguments\"]; });\n\n/* harmony import */ var _connectionString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connectionString */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/connectionString.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseConnectionString\", function() { return _connectionString__WEBPACK_IMPORTED_MODULE_3__[\"parseConnectionString\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/credential/index.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js ***!
  \********************************************************************************************/
/*! exports provided: serializeCommunicationIdentifier, deserializeCommunicationIdentifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeCommunicationIdentifier\", function() { return serializeCommunicationIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserializeCommunicationIdentifier\", function() { return deserializeCommunicationIdentifier; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _identifierModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifierModels */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst addRawIdIfExisting = (identifier, rawId) => {\n    return rawId === undefined ? identifier : Object.assign(Object.assign({}, identifier), { rawId: rawId });\n};\nconst assertNotNullOrUndefined = (obj, prop) => {\n    const subObjName = Object.keys(obj)[0];\n    const subObj = obj[subObjName];\n    if (prop in subObj) {\n        return subObj[prop];\n    }\n    throw new Error(`Property ${prop} is required for identifier of type ${subObjName}.`);\n};\nconst assertMaximumOneNestedModel = (identifier) => {\n    const { rawId: _rawId } = identifier, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(identifier, [\"rawId\"]);\n    const keys = Object.keys(props);\n    if (keys.length > 1) {\n        throw new Error(`Only one of the properties in ${JSON.stringify(keys)} should be present.`);\n    }\n};\n/**\n * @hidden\n * Translates a CommunicationIdentifier to its serialized format for sending a request.\n * @param identifier - The CommunicationIdentifier to be serialized.\n */\nconst serializeCommunicationIdentifier = (identifier) => {\n    var _a, _b;\n    const identifierKind = Object(_identifierModels__WEBPACK_IMPORTED_MODULE_1__[\"getIdentifierKind\"])(identifier);\n    switch (identifierKind.kind) {\n        case \"communicationUser\":\n            return { communicationUser: { id: identifierKind.communicationUserId } };\n        case \"phoneNumber\":\n            return addRawIdIfExisting({ phoneNumber: { value: identifierKind.phoneNumber } }, identifierKind.rawId);\n        case \"microsoftTeamsUser\":\n            return addRawIdIfExisting({\n                microsoftTeamsUser: {\n                    userId: identifierKind.microsoftTeamsUserId,\n                    isAnonymous: (_a = identifierKind.isAnonymous) !== null && _a !== void 0 ? _a : false,\n                    cloud: (_b = identifierKind.cloud) !== null && _b !== void 0 ? _b : \"public\"\n                }\n            }, identifierKind.rawId);\n        case \"unknown\":\n            return { rawId: identifierKind.id };\n        default:\n            throw new Error(`Can't serialize an identifier with kind ${identifierKind.kind}`);\n    }\n};\n/**\n * @hidden\n * Translates the serialized format of a communication identifier to CommunicationIdentifier.\n * @param serializedIdentifier - The SerializedCommunicationIdentifier to be deserialized.\n */\nconst deserializeCommunicationIdentifier = (serializedIdentifier) => {\n    assertMaximumOneNestedModel(serializedIdentifier);\n    const { communicationUser, microsoftTeamsUser, phoneNumber } = serializedIdentifier;\n    if (communicationUser) {\n        return {\n            kind: \"communicationUser\",\n            communicationUserId: assertNotNullOrUndefined({ communicationUser }, \"id\")\n        };\n    }\n    if (phoneNumber) {\n        return {\n            kind: \"phoneNumber\",\n            phoneNumber: assertNotNullOrUndefined({ phoneNumber }, \"value\"),\n            rawId: assertNotNullOrUndefined({ phoneNumber: serializedIdentifier }, \"rawId\")\n        };\n    }\n    if (microsoftTeamsUser) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            microsoftTeamsUserId: assertNotNullOrUndefined({ microsoftTeamsUser }, \"userId\"),\n            isAnonymous: assertNotNullOrUndefined({ microsoftTeamsUser }, \"isAnonymous\"),\n            cloud: assertNotNullOrUndefined({ microsoftTeamsUser }, \"cloud\"),\n            rawId: assertNotNullOrUndefined({ microsoftTeamsUser: serializedIdentifier }, \"rawId\")\n        };\n    }\n    return {\n        kind: \"unknown\",\n        id: assertNotNullOrUndefined({ unknown: serializedIdentifier }, \"rawId\")\n    };\n};\n//# sourceMappingURL=identifierModelSerializer.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js ***!
  \***********************************************************************************/
/*! exports provided: isCommunicationUserIdentifier, isPhoneNumberIdentifier, isMicrosoftTeamsUserIdentifier, isUnknownIdentifier, getIdentifierKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCommunicationUserIdentifier\", function() { return isCommunicationUserIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPhoneNumberIdentifier\", function() { return isPhoneNumberIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMicrosoftTeamsUserIdentifier\", function() { return isMicrosoftTeamsUserIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUnknownIdentifier\", function() { return isUnknownIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIdentifierKind\", function() { return getIdentifierKind; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an Identifier to determine whether it implements CommunicationUserIdentifier.\n *\n * @param identifier - The assumed CommunicationUserIdentifier to be tested.\n */\nconst isCommunicationUserIdentifier = (identifier) => {\n    return typeof identifier.communicationUserId === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements PhoneNumberIdentifier.\n *\n * @param identifier - The assumed PhoneNumberIdentifier to be tested.\n */\nconst isPhoneNumberIdentifier = (identifier) => {\n    return typeof identifier.phoneNumber === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements MicrosoftTeamsUserIdentifier.\n *\n * @param identifier - The assumed available to be tested.\n */\nconst isMicrosoftTeamsUserIdentifier = (identifier) => {\n    return typeof identifier.microsoftTeamsUserId === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements UnknownIdentifier.\n *\n * @param identifier - The assumed UnknownIdentifier to be tested.\n */\nconst isUnknownIdentifier = (identifier) => {\n    return typeof identifier.id === \"string\";\n};\n/**\n * Returns the CommunicationIdentifierKind for a given CommunicationIdentifier. Returns undefined if the kind couldn't be inferred.\n *\n * @param identifier - The identifier whose kind is to be inferred.\n */\nconst getIdentifierKind = (identifier) => {\n    if (isCommunicationUserIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"communicationUser\" });\n    }\n    if (isPhoneNumberIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"phoneNumber\" });\n    }\n    if (isMicrosoftTeamsUserIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"microsoftTeamsUser\" });\n    }\n    return Object.assign(Object.assign({}, identifier), { kind: \"unknown\" });\n};\n//# sourceMappingURL=identifierModels.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/index.js ***!
  \************************************************************************/
/*! exports provided: AzureCommunicationTokenCredential, createCommunicationAccessKeyCredentialPolicy, createCommunicationAuthPolicy, isKeyCredential, parseClientArguments, parseConnectionString, isCommunicationUserIdentifier, isPhoneNumberIdentifier, isMicrosoftTeamsUserIdentifier, isUnknownIdentifier, getIdentifierKind, serializeCommunicationIdentifier, deserializeCommunicationIdentifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _communicationTokenCredential__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./communicationTokenCredential */ \"./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AzureCommunicationTokenCredential\", function() { return _communicationTokenCredential__WEBPACK_IMPORTED_MODULE_0__[\"AzureCommunicationTokenCredential\"]; });\n\n/* harmony import */ var _credential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./credential */ \"./node_modules/@azure/communication-common/dist-esm/src/credential/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAccessKeyCredentialPolicy\", function() { return _credential__WEBPACK_IMPORTED_MODULE_1__[\"createCommunicationAccessKeyCredentialPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createCommunicationAuthPolicy\", function() { return _credential__WEBPACK_IMPORTED_MODULE_1__[\"createCommunicationAuthPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isKeyCredential\", function() { return _credential__WEBPACK_IMPORTED_MODULE_1__[\"isKeyCredential\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseClientArguments\", function() { return _credential__WEBPACK_IMPORTED_MODULE_1__[\"parseClientArguments\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseConnectionString\", function() { return _credential__WEBPACK_IMPORTED_MODULE_1__[\"parseConnectionString\"]; });\n\n/* empty/unused harmony star reexport *//* harmony import */ var _identifierModels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identifierModels */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isCommunicationUserIdentifier\", function() { return _identifierModels__WEBPACK_IMPORTED_MODULE_2__[\"isCommunicationUserIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPhoneNumberIdentifier\", function() { return _identifierModels__WEBPACK_IMPORTED_MODULE_2__[\"isPhoneNumberIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMicrosoftTeamsUserIdentifier\", function() { return _identifierModels__WEBPACK_IMPORTED_MODULE_2__[\"isMicrosoftTeamsUserIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUnknownIdentifier\", function() { return _identifierModels__WEBPACK_IMPORTED_MODULE_2__[\"isUnknownIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getIdentifierKind\", function() { return _identifierModels__WEBPACK_IMPORTED_MODULE_2__[\"getIdentifierKind\"]; });\n\n/* harmony import */ var _identifierModelSerializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identifierModelSerializer */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"serializeCommunicationIdentifier\", function() { return _identifierModelSerializer__WEBPACK_IMPORTED_MODULE_3__[\"serializeCommunicationIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deserializeCommunicationIdentifier\", function() { return _identifierModelSerializer__WEBPACK_IMPORTED_MODULE_3__[\"deserializeCommunicationIdentifier\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js ***!
  \****************************************************************************************/
/*! exports provided: StaticTokenCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StaticTokenCredential\", function() { return StaticTokenCredential; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * StaticTokenCredential\n */\nclass StaticTokenCredential {\n    constructor(token) {\n        this.token = token;\n    }\n    async getToken() {\n        return this.token;\n    }\n    dispose() {\n        /* intentionally empty */\n    }\n}\n//# sourceMappingURL=staticTokenCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js ***!
  \******************************************************************************/
/*! exports provided: parseToken */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseToken\", function() { return parseToken; });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/index.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jwt_decode__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst parseToken = (token) => {\n    const { exp } = jwt_decode__WEBPACK_IMPORTED_MODULE_0___default()(token);\n    return {\n        token,\n        expiresOnTimestamp: exp * 1000\n    };\n};\n//# sourceMappingURL=tokenParser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/atob.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/atob.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/atob.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/base64_url_decode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/base64_url_decode.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var atob = __webpack_require__(/*! ./atob */ \"./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/atob.js\");\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/base64_url_decode.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar base64_url_decode = __webpack_require__(/*! ./base64_url_decode */ \"./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/base64_url_decode.js\");\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n\n\n//# sourceURL=webpack:///./node_modules/@azure/communication-common/node_modules/jwt-decode/lib/index.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js ***!
  \**************************************************************************/
/*! exports provided: AzureKeyCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AzureKeyCredential\", function() { return AzureKeyCredential; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nclass AzureKeyCredential {\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n//# sourceMappingURL=azureKeyCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js ***!
  \*******************************************************************************/
/*! exports provided: AzureNamedKeyCredential, isNamedKeyCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AzureNamedKeyCredential\", function() { return AzureNamedKeyCredential; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNamedKeyCredential\", function() { return isNamedKeyCredential; });\n/* harmony import */ var _typeguards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeguards */ \"./node_modules/@azure/core-auth/dist-esm/src/typeguards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nclass AzureNamedKeyCredential {\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nfunction isNamedKeyCredential(credential) {\n    return (Object(_typeguards__WEBPACK_IMPORTED_MODULE_0__[\"isObjectWithProperties\"])(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js ***!
  \**************************************************************************/
/*! exports provided: AzureSASCredential, isSASCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AzureSASCredential\", function() { return AzureSASCredential; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSASCredential\", function() { return isSASCredential; });\n/* harmony import */ var _typeguards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeguards */ \"./node_modules/@azure/core-auth/dist-esm/src/typeguards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nclass AzureSASCredential {\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nfunction isSASCredential(credential) {\n    return (Object(_typeguards__WEBPACK_IMPORTED_MODULE_0__[\"isObjectWithProperties\"])(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\n//# sourceMappingURL=azureSASCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/index.js ***!
  \*************************************************************/
/*! exports provided: AzureKeyCredential, AzureNamedKeyCredential, isNamedKeyCredential, AzureSASCredential, isSASCredential, isTokenCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _azureKeyCredential__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azureKeyCredential */ \"./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AzureKeyCredential\", function() { return _azureKeyCredential__WEBPACK_IMPORTED_MODULE_0__[\"AzureKeyCredential\"]; });\n\n/* harmony import */ var _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azureNamedKeyCredential */ \"./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AzureNamedKeyCredential\", function() { return _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__[\"AzureNamedKeyCredential\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNamedKeyCredential\", function() { return _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__[\"isNamedKeyCredential\"]; });\n\n/* harmony import */ var _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./azureSASCredential */ \"./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AzureSASCredential\", function() { return _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__[\"AzureSASCredential\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSASCredential\", function() { return _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__[\"isSASCredential\"]; });\n\n/* harmony import */ var _tokenCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tokenCredential */ \"./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isTokenCredential\", function() { return _tokenCredential__WEBPACK_IMPORTED_MODULE_3__[\"isTokenCredential\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js ***!
  \***********************************************************************/
/*! exports provided: isTokenCredential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTokenCredential\", function() { return isTokenCredential; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/typeguards.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/typeguards.js ***!
  \******************************************************************/
/*! exports provided: isObjectWithProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObjectWithProperties\", function() { return isObjectWithProperties; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * Note: The properties may be inherited.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n * @internal\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * Note: The property may be inherited.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n * @internal\n */\nfunction objectHasProperty(thing, property) {\n    return typeof thing === \"object\" && property in thing;\n}\n//# sourceMappingURL=typeguards.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-auth/dist-esm/src/typeguards.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/coreHttp.js ***!
  \****************************************************************/
/*! exports provided: WebResource, DefaultHttpClient, HttpHeaders, HttpPipelineLogLevel, RestError, operationOptionsToRequestOptionsBase, ServiceClient, flattenResponse, createPipelineFromOptions, QueryCollectionFormat, Constants, bearerTokenAuthenticationPolicy, logPolicy, BaseRequestPolicy, RequestPolicyOptions, generateClientRequestIdPolicy, exponentialRetryPolicy, RetryMode, systemErrorRetryPolicy, throttlingRetryPolicy, getDefaultProxySettings, proxyPolicy, redirectPolicy, keepAlivePolicy, disableResponseDecompressionPolicy, signingPolicy, userAgentPolicy, getDefaultUserAgentValue, deserializationPolicy, deserializeResponseBody, tracingPolicy, MapperType, Serializer, serializeObject, stripRequest, stripResponse, executePromisesSequentially, generateUuid, encodeUri, promiseToCallback, promiseToServiceCallback, isValidUuid, applyMixins, isNode, isDuration, URLBuilder, URLQuery, delay, createSpanFunction, isTokenCredential, ExpiringAccessTokenCache, AccessTokenRefresher, BasicAuthenticationCredentials, ApiKeyCredentials, TopicCredentials, parseXML, stringifyXML, XML_ATTRKEY, XML_CHARKEY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _webResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webResource */ \"./node_modules/@azure/core-http/dist-esm/src/webResource.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WebResource\", function() { return _webResource__WEBPACK_IMPORTED_MODULE_0__[\"WebResource\"]; });\n\n/* harmony import */ var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultHttpClient */ \"./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultHttpClient\", function() { return _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__[\"DefaultHttpClient\"]; });\n\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaders\", function() { return _httpHeaders__WEBPACK_IMPORTED_MODULE_2__[\"HttpHeaders\"]; });\n\n/* harmony import */ var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpPipelineLogLevel */ \"./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HttpPipelineLogLevel\", function() { return _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__[\"HttpPipelineLogLevel\"]; });\n\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RestError\", function() { return _restError__WEBPACK_IMPORTED_MODULE_4__[\"RestError\"]; });\n\n/* harmony import */ var _operationOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operationOptions */ \"./node_modules/@azure/core-http/dist-esm/src/operationOptions.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"operationOptionsToRequestOptionsBase\", function() { return _operationOptions__WEBPACK_IMPORTED_MODULE_5__[\"operationOptionsToRequestOptionsBase\"]; });\n\n/* harmony import */ var _serviceClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./serviceClient */ \"./node_modules/@azure/core-http/dist-esm/src/serviceClient.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ServiceClient\", function() { return _serviceClient__WEBPACK_IMPORTED_MODULE_6__[\"ServiceClient\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flattenResponse\", function() { return _serviceClient__WEBPACK_IMPORTED_MODULE_6__[\"flattenResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createPipelineFromOptions\", function() { return _serviceClient__WEBPACK_IMPORTED_MODULE_6__[\"createPipelineFromOptions\"]; });\n\n/* harmony import */ var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./queryCollectionFormat */ \"./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryCollectionFormat\", function() { return _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__[\"QueryCollectionFormat\"]; });\n\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Constants\", function() { return _util_constants__WEBPACK_IMPORTED_MODULE_8__[\"Constants\"]; });\n\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"bearerTokenAuthenticationPolicy\", function() { return _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__[\"bearerTokenAuthenticationPolicy\"]; });\n\n/* harmony import */ var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/logPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"logPolicy\", function() { return _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__[\"logPolicy\"]; });\n\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BaseRequestPolicy\", function() { return _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__[\"BaseRequestPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RequestPolicyOptions\", function() { return _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__[\"RequestPolicyOptions\"]; });\n\n/* harmony import */ var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/generateClientRequestIdPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateClientRequestIdPolicy\", function() { return _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__[\"generateClientRequestIdPolicy\"]; });\n\n/* harmony import */ var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"exponentialRetryPolicy\", function() { return _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__[\"exponentialRetryPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RetryMode\", function() { return _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__[\"RetryMode\"]; });\n\n/* harmony import */ var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"systemErrorRetryPolicy\", function() { return _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__[\"systemErrorRetryPolicy\"]; });\n\n/* harmony import */ var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throttlingRetryPolicy\", function() { return _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__[\"throttlingRetryPolicy\"]; });\n\n/* harmony import */ var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/proxyPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDefaultProxySettings\", function() { return _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__[\"getDefaultProxySettings\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"proxyPolicy\", function() { return _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__[\"proxyPolicy\"]; });\n\n/* harmony import */ var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/redirectPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"redirectPolicy\", function() { return _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__[\"redirectPolicy\"]; });\n\n/* harmony import */ var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/keepAlivePolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keepAlivePolicy\", function() { return _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__[\"keepAlivePolicy\"]; });\n\n/* harmony import */ var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/disableResponseDecompressionPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"disableResponseDecompressionPolicy\", function() { return _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__[\"disableResponseDecompressionPolicy\"]; });\n\n/* harmony import */ var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/signingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"signingPolicy\", function() { return _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__[\"signingPolicy\"]; });\n\n/* harmony import */ var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/userAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"userAgentPolicy\", function() { return _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__[\"userAgentPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDefaultUserAgentValue\", function() { return _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__[\"getDefaultUserAgentValue\"]; });\n\n/* harmony import */ var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/deserializationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deserializationPolicy\", function() { return _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__[\"deserializationPolicy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deserializeResponseBody\", function() { return _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__[\"deserializeResponseBody\"]; });\n\n/* harmony import */ var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/tracingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tracingPolicy\", function() { return _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__[\"tracingPolicy\"]; });\n\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MapperType\", function() { return _serializer__WEBPACK_IMPORTED_MODULE_24__[\"MapperType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Serializer\", function() { return _serializer__WEBPACK_IMPORTED_MODULE_24__[\"Serializer\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"serializeObject\", function() { return _serializer__WEBPACK_IMPORTED_MODULE_24__[\"serializeObject\"]; });\n\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stripRequest\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"stripRequest\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stripResponse\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"stripResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"executePromisesSequentially\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"executePromisesSequentially\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateUuid\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"generateUuid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"encodeUri\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"encodeUri\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"promiseToCallback\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"promiseToCallback\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"promiseToServiceCallback\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"promiseToServiceCallback\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isValidUuid\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"isValidUuid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"applyMixins\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"applyMixins\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNode\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"isNode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDuration\", function() { return _util_utils__WEBPACK_IMPORTED_MODULE_25__[\"isDuration\"]; });\n\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"URLBuilder\", function() { return _url__WEBPACK_IMPORTED_MODULE_26__[\"URLBuilder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"URLQuery\", function() { return _url__WEBPACK_IMPORTED_MODULE_26__[\"URLQuery\"]; });\n\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"delay\", function() { return _util_delay__WEBPACK_IMPORTED_MODULE_27__[\"delay\"]; });\n\n/* harmony import */ var _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./createSpanLegacy */ \"./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createSpanFunction\", function() { return _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__[\"createSpanFunction\"]; });\n\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isTokenCredential\", function() { return _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__[\"isTokenCredential\"]; });\n\n/* harmony import */ var _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./credentials/accessTokenCache */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ExpiringAccessTokenCache\", function() { return _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__[\"ExpiringAccessTokenCache\"]; });\n\n/* harmony import */ var _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./credentials/accessTokenRefresher */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AccessTokenRefresher\", function() { return _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__[\"AccessTokenRefresher\"]; });\n\n/* harmony import */ var _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./credentials/basicAuthenticationCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BasicAuthenticationCredentials\", function() { return _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__[\"BasicAuthenticationCredentials\"]; });\n\n/* harmony import */ var _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./credentials/apiKeyCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ApiKeyCredentials\", function() { return _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__[\"ApiKeyCredentials\"]; });\n\n/* harmony import */ var _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./credentials/topicCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TopicCredentials\", function() { return _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__[\"TopicCredentials\"]; });\n\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseXML\", function() { return _util_xml__WEBPACK_IMPORTED_MODULE_35__[\"parseXML\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringifyXML\", function() { return _util_xml__WEBPACK_IMPORTED_MODULE_35__[\"stringifyXML\"]; });\n\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XML_ATTRKEY\", function() { return _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__[\"XML_ATTRKEY\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XML_CHARKEY\", function() { return _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__[\"XML_CHARKEY\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\n\n// Credentials\n\n\n\n\n\n\n\n\n//# sourceMappingURL=coreHttp.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/coreHttp.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js ***!
  \************************************************************************/
/*! exports provided: createSpanFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSpanFunction\", function() { return createSpanFunction; });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// NOTE: we've moved this code into core-tracing but these functions\n// were a part of the GA'd library and can't be removed until the next major\n// release. They currently get called always, even if tracing is not enabled.\n\n/**\n * This function is only here for compatibility. Use createSpanFunction in core-tracing.\n *\n * @deprecated This function is only here for compatibility. Use createSpanFunction in core-tracing.\n * @hidden\n\n * @param spanConfig - The name of the operation being performed.\n * @param tracingOptions - The options for the underlying http request.\n */\nfunction createSpanFunction(args) {\n    return Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__[\"createSpanFunction\"])(args);\n}\n//# sourceMappingURL=createSpanLegacy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js ***!
  \************************************************************************************/
/*! exports provided: TokenRefreshBufferMs, ExpiringAccessTokenCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenRefreshBufferMs\", function() { return TokenRefreshBufferMs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExpiringAccessTokenCache\", function() { return ExpiringAccessTokenCache; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Defines the default token refresh buffer duration.\n */\nconst TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nclass ExpiringAccessTokenCache {\n    /**\n     * Constructs an instance of {@link ExpiringAccessTokenCache} with\n     * an optional expiration buffer time.\n     */\n    constructor(tokenRefreshBufferMs = TokenRefreshBufferMs) {\n        this.cachedToken = undefined;\n        this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n    }\n    /**\n     * Saves an access token into the internal in-memory cache.\n     * @param accessToken - Access token or undefined to clear the cache.\n     */\n    setCachedToken(accessToken) {\n        this.cachedToken = accessToken;\n    }\n    /**\n     * Returns the cached access token, or `undefined` if one is not cached or the cached one is expiring soon.\n     */\n    getCachedToken() {\n        if (this.cachedToken &&\n            Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp) {\n            this.cachedToken = undefined;\n        }\n        return this.cachedToken;\n    }\n}\n//# sourceMappingURL=accessTokenCache.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js ***!
  \****************************************************************************************/
/*! exports provided: AccessTokenRefresher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccessTokenRefresher\", function() { return AccessTokenRefresher; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nclass AccessTokenRefresher {\n    constructor(credential, scopes, requiredMillisecondsBeforeNewRefresh = 30000) {\n        this.credential = credential;\n        this.scopes = scopes;\n        this.requiredMillisecondsBeforeNewRefresh = requiredMillisecondsBeforeNewRefresh;\n        this.lastCalled = 0;\n    }\n    /**\n     * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n     * that we are ready for a new refresh.\n     */\n    isReady() {\n        // We're only ready for a new refresh if the required milliseconds have passed.\n        return (!this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh);\n    }\n    /**\n     * Stores the time in which it is called,\n     * then requests a new token,\n     * then sets this.promise to undefined,\n     * then returns the token.\n     */\n    async getToken(options) {\n        this.lastCalled = Date.now();\n        const token = await this.credential.getToken(this.scopes, options);\n        this.promise = undefined;\n        return token || undefined;\n    }\n    /**\n     * Requests a new token if we're not currently waiting for a new token.\n     * Returns null if the required time between each call hasn't been reached.\n     */\n    refresh(options) {\n        if (!this.promise) {\n            this.promise = this.getToken(options);\n        }\n        return this.promise;\n    }\n}\n//# sourceMappingURL=accessTokenRefresher.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js ***!
  \*************************************************************************************/
/*! exports provided: ApiKeyCredentials */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ApiKeyCredentials\", function() { return ApiKeyCredentials; });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Authenticates to a service using an API key.\n */\nclass ApiKeyCredentials {\n    /**\n     * @param options - Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    constructor(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(`options cannot be null or undefined. Either \"inHeader\" or \"inQuery\" property of the options object needs to be provided.`);\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(`webResource cannot be null or undefined and must be of type \"object\".`));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__[\"HttpHeaders\"]();\n            }\n            for (const headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(`url cannot be null in the request object.`));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (const key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += `${key}=${this.inQuery[key]}`;\n            }\n        }\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=apiKeyCredentials.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js ***!
  \**************************************************************************************************/
/*! exports provided: BasicAuthenticationCredentials */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasicAuthenticationCredentials\", function() { return BasicAuthenticationCredentials; });\n/* harmony import */ var _util_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/base64 */ \"./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst HeaderConstants = _util_constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].HeaderConstants;\nconst DEFAULT_AUTHORIZATION_SCHEME = \"Basic\";\n/**\n * A simple {@link ServiceClientCredential} that authenticates with a username and a password.\n */\nclass BasicAuthenticationCredentials {\n    /**\n     * Creates a new BasicAuthenticationCredentials object.\n     *\n     * @param userName - User name.\n     * @param password - Password.\n     * @param authorizationScheme - The authorization scheme.\n     */\n    constructor(userName, password, authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME) {\n        /**\n         * Authorization scheme. Defaults to \"Basic\".\n         * More information about authorization schemes is available here: https://developer.mozilla.org/docs/Web/HTTP/Authentication#authentication_schemes\n         */\n        this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n        if (userName === null || userName === undefined || typeof userName.valueOf() !== \"string\") {\n            throw new Error(\"userName cannot be null or undefined and must be of type string.\");\n        }\n        if (password === null || password === undefined || typeof password.valueOf() !== \"string\") {\n            throw new Error(\"password cannot be null or undefined and must be of type string.\");\n        }\n        this.userName = userName;\n        this.password = password;\n        this.authorizationScheme = authorizationScheme;\n    }\n    /**\n     * Signs a request with the Authentication header.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        const credentials = `${this.userName}:${this.password}`;\n        const encodedCredentials = `${this.authorizationScheme} ${_util_base64__WEBPACK_IMPORTED_MODULE_0__[\"encodeString\"](credentials)}`;\n        if (!webResource.headers)\n            webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_2__[\"HttpHeaders\"]();\n        webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=basicAuthenticationCredentials.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js ***!
  \************************************************************************************/
/*! exports provided: TopicCredentials */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TopicCredentials\", function() { return TopicCredentials; });\n/* harmony import */ var _apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiKeyCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A {@link TopicCredentials} object used for Azure Event Grid.\n */\nclass TopicCredentials extends _apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__[\"ApiKeyCredentials\"] {\n    /**\n     * Creates a new EventGrid TopicCredentials object.\n     *\n     * @param topicKey - The EventGrid topic key\n     */\n    constructor(topicKey) {\n        if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n            throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n        }\n        const options = {\n            inHeader: {\n                \"aeg-sas-key\": topicKey,\n            },\n        };\n        super(options);\n    }\n}\n//# sourceMappingURL=topicCredentials.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js ***!
  \*********************************************************************************/
/*! exports provided: DefaultHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xhrHttpClient */ \"./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultHttpClient\", function() { return _xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__[\"XhrHttpClient\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=defaultHttpClient.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js ***!
  \***********************************************************************/
/*! exports provided: getCachedDefaultHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCachedDefaultHttpClient\", function() { return getCachedDefaultHttpClient; });\n/* harmony import */ var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultHttpClient */ \"./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = new _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__[\"DefaultHttpClient\"]();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js ***!
  \*******************************************************************/
/*! exports provided: isHttpHeadersLike, HttpHeaders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHttpHeadersLike\", function() { return isHttpHeadersLike; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaders\", function() { return HttpHeaders; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\nfunction isHttpHeadersLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.rawHeaders === \"function\" &&\n            typeof castObject.clone === \"function\" &&\n            typeof castObject.get === \"function\" &&\n            typeof castObject.set === \"function\" &&\n            typeof castObject.contains === \"function\" &&\n            typeof castObject.remove === \"function\" &&\n            typeof castObject.headersArray === \"function\" &&\n            typeof castObject.headerValues === \"function\" &&\n            typeof castObject.headerNames === \"function\" &&\n            typeof castObject.toJson === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nclass HttpHeaders {\n    constructor(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (const headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName - The name of the header to set. This value is case-insensitive.\n     * @param headerValue - The value of the header to set.\n     */\n    set(headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString(),\n        };\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName - The name of the header.\n     */\n    get(headerName) {\n        const header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    contains(headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    }\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName - The name of the header to remove.\n     */\n    remove(headerName) {\n        const result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    }\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    rawHeaders() {\n        return this.toJson({ preserveCase: true });\n    }\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    headersArray() {\n        const headers = [];\n        for (const headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    }\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    headerNames() {\n        const headerNames = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    }\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    headerValues() {\n        const headerValues = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJson(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[header.name] = header.value;\n            }\n        }\n        else {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[getHeaderKey(header.name)] = header.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJson({ preserveCase: true }));\n    }\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    clone() {\n        const resultPreservingCasing = {};\n        for (const headerKey in this._headersMap) {\n            const header = this._headersMap[headerKey];\n            resultPreservingCasing[header.name] = header.value;\n        }\n        return new HttpHeaders(resultPreservingCasing);\n    }\n}\n//# sourceMappingURL=httpHeaders.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js ***!
  \****************************************************************************/
/*! exports provided: HttpPipelineLogLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpPipelineLogLevel\", function() { return HttpPipelineLogLevel; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nvar HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\n//# sourceMappingURL=httpPipelineLogLevel.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/log.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/log.js ***!
  \***********************************************************/
/*! exports provided: logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logger\", function() { return logger; });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"./node_modules/@azure/logger/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = Object(_azure_logger__WEBPACK_IMPORTED_MODULE_0__[\"createClientLogger\"])(\"core-http\");\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/log.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationOptions.js ***!
  \************************************************************************/
/*! exports provided: operationOptionsToRequestOptionsBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"operationOptionsToRequestOptionsBase\", function() { return operationOptionsToRequestOptionsBase; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nfunction operationOptionsToRequestOptionsBase(opts) {\n    const { requestOptions, tracingOptions } = opts, additionalOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(opts, [\"requestOptions\", \"tracingOptions\"]);\n    let result = additionalOptions;\n    if (requestOptions) {\n        result = Object.assign(Object.assign({}, result), requestOptions);\n    }\n    if (tracingOptions) {\n        result.tracingContext = tracingOptions.tracingContext;\n        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n        result.spanOptions = tracingOptions === null || tracingOptions === void 0 ? void 0 : tracingOptions.spanOptions;\n    }\n    return result;\n}\n//# sourceMappingURL=operationOptions.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/operationOptions.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationParameter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationParameter.js ***!
  \**************************************************************************/
/*! exports provided: getPathStringFromParameter, getPathStringFromParameterPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPathStringFromParameter\", function() { return getPathStringFromParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPathStringFromParameterPath\", function() { return getPathStringFromParameterPath; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nfunction getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nfunction getPathStringFromParameterPath(parameterPath, mapper) {\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/operationParameter.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationSpec.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationSpec.js ***!
  \*********************************************************************/
/*! exports provided: getStreamResponseStatusCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStreamResponseStatusCodes\", function() { return getStreamResponseStatusCodes; });\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_0__[\"MapperType\"].Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=operationSpec.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/operationSpec.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js ***!
  \************************************************************************************************/
/*! exports provided: DEFAULT_CYCLER_OPTIONS, bearerTokenAuthenticationPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CYCLER_OPTIONS\", function() { return DEFAULT_CYCLER_OPTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bearerTokenAuthenticationPolicy\", function() { return bearerTokenAuthenticationPolicy; });\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000,\n    retryIntervalInMs: 3000,\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - a function that produces a promise of an access\n * token that may fail by returning null\n * @param retryIntervalInMs - the time (in milliseconds) to wait between retry\n * attempts\n * @param timeoutInMs - the timestamp after which the refresh attempt will fail,\n * throwing an exception\n * @returns - a promise that, if it resolves, will resolve with an access token\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, timeoutInMs) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < timeoutInMs) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await Object(_util_delay__WEBPACK_IMPORTED_MODULE_2__[\"delay\"])(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param scopes - the scopes to request authorization for\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, scopes, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        if (cycler.mustRefresh)\n            return refresh(tokenOptions);\n        if (cycler.shouldRefresh) {\n            refresh(tokenOptions);\n        }\n        return token;\n    };\n}\n// #endregion\n/**\n * Creates a new factory for a RequestPolicy that applies a bearer token to\n * the requests' `Authorization` headers.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\nfunction bearerTokenAuthenticationPolicy(credential, scopes) {\n    // This simple function encapsulates the entire process of reliably retrieving the token\n    const getToken = createTokenCycler(credential, scopes /* , options */);\n    class BearerTokenAuthenticationPolicy extends _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n        constructor(nextPolicy, options) {\n            super(nextPolicy, options);\n        }\n        async sendRequest(webResource) {\n            if (!webResource.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            const { token } = await getToken({\n                abortSignal: webResource.abortSignal,\n                tracingOptions: {\n                    tracingContext: webResource.tracingContext,\n                },\n            });\n            webResource.headers.set(_util_constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n            return this._nextPolicy.sendRequest(webResource);\n        }\n    }\n    return {\n        create: (nextPolicy, options) => {\n            return new BearerTokenAuthenticationPolicy(nextPolicy, options);\n        },\n    };\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js ***!
  \**************************************************************************************/
/*! exports provided: deserializationPolicy, defaultJsonContentTypes, defaultXmlContentTypes, DefaultDeserializationOptions, DeserializationPolicy, deserializeResponseBody */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserializationPolicy\", function() { return deserializationPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultJsonContentTypes\", function() { return defaultJsonContentTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultXmlContentTypes\", function() { return defaultXmlContentTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultDeserializationOptions\", function() { return DefaultDeserializationOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeserializationPolicy\", function() { return DeserializationPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserializeResponseBody\", function() { return deserializeResponseBody; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nfunction deserializationPolicy(deserializationContentTypes, parsingOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new DeserializationPolicy(nextPolicy, options, deserializationContentTypes, parsingOptions);\n        },\n    };\n}\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\nconst DefaultDeserializationOptions = {\n    expectedContentTypes: {\n        json: defaultJsonContentTypes,\n        xml: defaultXmlContentTypes,\n    },\n};\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nclass DeserializationPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, requestPolicyOptions, deserializationContentTypes, parsingOptions = {}) {\n        var _a;\n        super(nextPolicy, requestPolicyOptions);\n        this.jsonContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n        this.xmlContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n        this.xmlCharKey = (_a = parsingOptions.xmlCharKey) !== null && _a !== void 0 ? _a : _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__[\"XML_CHARKEY\"];\n    }\n    async sendRequest(request) {\n        return this._nextPolicy.sendRequest(request).then((response) => deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n            xmlCharKey: this.xmlCharKey,\n        }));\n    }\n}\nfunction getOperationResponse(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationSpec = request.operationSpec;\n    if (operationSpec) {\n        const operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\n/**\n * Given a particular set of content types to parse as either JSON or XML, consumes the HTTP response to produce the result object defined by the request's {@link OperationSpec}.\n * @param jsonContentTypes - Response content types to parse the body as JSON.\n * @param xmlContentTypes  - Response content types to parse the body as XML.\n * @param response - HTTP Response from the pipeline.\n * @param options  - Options to the serializer, mostly for configuring the XML parser if needed.\n * @returns A parsed {@link HttpOperationResponse} object that can be returned by the {@link ServiceClient}.\n */\nfunction deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n        includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__[\"XML_CHARKEY\"],\n    };\n    return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then((parsedResponse) => {\n        if (!shouldDeserializeResponse(parsedResponse)) {\n            return parsedResponse;\n        }\n        const operationSpec = parsedResponse.request.operationSpec;\n        if (!operationSpec || !operationSpec.responses) {\n            return parsedResponse;\n        }\n        const responseSpec = getOperationResponse(parsedResponse);\n        const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec);\n        if (error) {\n            throw error;\n        }\n        else if (shouldReturnResponse) {\n            return parsedResponse;\n        }\n        // An operation response spec does exist for current status code, so\n        // use it to deserialize the response.\n        if (responseSpec) {\n            if (responseSpec.bodyMapper) {\n                let valueToDeserialize = parsedResponse.parsedBody;\n                if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__[\"MapperType\"].Sequence) {\n                    valueToDeserialize =\n                        typeof valueToDeserialize === \"object\"\n                            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                            : [];\n                }\n                try {\n                    parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n                }\n                catch (innerError) {\n                    const restError = new _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"](`Error ${innerError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n                    throw restError;\n                }\n            }\n            else if (operationSpec.httpMethod === \"HEAD\") {\n                // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n            }\n            if (responseSpec.headersMapper) {\n                parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\", options);\n            }\n        }\n        return parsedResponse;\n    });\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec) {\n    var _a;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const streaming = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status)) ||\n        parsedResponse.request.streamResponseBody;\n    const initialErrorMessage = streaming\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"](initialErrorMessage, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let parsedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__[\"MapperType\"].Sequence) {\n                    valueToDeserialize =\n                        typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName] : [];\n                }\n                parsedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\");\n            }\n            const internalError = parsedBody.error || parsedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = parsedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders = operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse, opts) {\n    var _a;\n    const errorHandler = (err) => {\n        const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n        const errCode = err.code || _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"].PARSE_ERROR;\n        const e = new _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"](msg, errCode, operationResponse.status, operationResponse.request, operationResponse);\n        return Promise.reject(e);\n    };\n    const streaming = ((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) ||\n        operationResponse.request.streamResponseBody;\n    if (!streaming && operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        if (contentComponents.length === 0 ||\n            contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n            return new Promise((resolve) => {\n                operationResponse.parsedBody = JSON.parse(text);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n            return Object(_util_xml__WEBPACK_IMPORTED_MODULE_4__[\"parseXML\"])(text, opts)\n                .then((body) => {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n//# sourceMappingURL=deserializationPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js ***!
  \***********************************************************************************************************/
/*! exports provided: disableResponseDecompressionPolicy, DisableResponseDecompressionPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableResponseDecompressionPolicy\", function() { return disableResponseDecompressionPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DisableResponseDecompressionPolicy\", function() { return DisableResponseDecompressionPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\n\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\"DisableResponseDecompressionPolicy is not supported in browser environment\");\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nfunction disableResponseDecompressionPolicy() {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw DisbleResponseDecompressionNotSupportedInBrowser;\n        },\n    };\n}\nclass DisableResponseDecompressionPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n    async sendRequest(_request) {\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=disableResponseDecompressionPolicy.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js ***!
  \***************************************************************************************/
/*! exports provided: exponentialRetryPolicy, RetryMode, DefaultRetryOptions, ExponentialRetryPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exponentialRetryPolicy\", function() { return exponentialRetryPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RetryMode\", function() { return RetryMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultRetryOptions\", function() { return DefaultRetryOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExponentialRetryPolicy\", function() { return ExponentialRetryPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/exponentialBackoffStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n/**\n * Policy that retries the request as many times as configured for as long as the max retry time interval specified, each retry waiting longer to begin than the last time.\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - Base time between retries.\n * @param maxRetryInterval - Maximum time to wait between retries.\n */\nfunction exponentialRetryPolicy(retryCount, retryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval);\n        },\n    };\n}\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n */\nvar RetryMode;\n(function (RetryMode) {\n    /**\n     * Currently supported retry mode.\n     * Each time a retry happens, it will take exponentially more time than the last time.\n     */\n    RetryMode[RetryMode[\"Exponential\"] = 0] = \"Exponential\";\n})(RetryMode || (RetryMode = {}));\nconst DefaultRetryOptions = {\n    maxRetries: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_COUNT\"],\n    retryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_INTERVAL\"],\n    maxRetryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_MAX_RETRY_INTERVAL\"],\n};\n/**\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nclass ExponentialRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    /**\n     * @param nextPolicy - The next RequestPolicy in the pipeline chain.\n     * @param options - The options for this RequestPolicy.\n     * @param retryCount - The client retry count.\n     * @param retryInterval - The client retry interval, in milliseconds.\n     * @param minRetryInterval - The minimum retry interval, in milliseconds.\n     * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n     */\n    constructor(nextPolicy, options, retryCount, retryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_COUNT\"];\n        this.retryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_INTERVAL\"];\n        this.maxRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(maxRetryInterval)\n            ? maxRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_MAX_RETRY_INTERVAL\"];\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => retry(this, request, response))\n            .catch((error) => retry(this, request, error.response, undefined, error));\n    }\n}\nasync function retry(policy, request, response, retryData, requestError) {\n    function shouldPolicyRetry(responseParam) {\n        const statusCode = responseParam === null || responseParam === void 0 ? void 0 : responseParam.status;\n        if (statusCode === 503 && (response === null || response === void 0 ? void 0 : response.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_2__[\"Constants\"].HeaderConstants.RETRY_AFTER))) {\n            return false;\n        }\n        if (statusCode === undefined ||\n            (statusCode < 500 && statusCode !== 408) ||\n            statusCode === 501 ||\n            statusCode === 505) {\n            return false;\n        }\n        return true;\n    }\n    retryData = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"updateRetryData\"])({\n        retryInterval: policy.retryInterval,\n        minRetryInterval: 0,\n        maxRetryInterval: policy.maxRetryInterval,\n    }, retryData, requestError);\n    const isAborted = request.abortSignal && request.abortSignal.aborted;\n    if (!isAborted && Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"shouldRetry\"])(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n        _log__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].info(`Retrying request in ${retryData.retryInterval}`);\n        try {\n            await Object(_util_delay__WEBPACK_IMPORTED_MODULE_4__[\"delay\"])(retryData.retryInterval);\n            const res = await policy._nextPolicy.sendRequest(request.clone());\n            return retry(policy, request, res, retryData);\n        }\n        catch (err) {\n            return retry(policy, request, response, retryData, err);\n        }\n    }\n    else if (isAborted || requestError || !response) {\n        // If the operation failed in the end, return all errors instead of just the last one\n        const err = retryData.error ||\n            new _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"](\"Failed to send the request.\", _restError__WEBPACK_IMPORTED_MODULE_3__[\"RestError\"].REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n        throw err;\n    }\n    else {\n        return response;\n    }\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/*! exports provided: generateClientRequestIdPolicy, GenerateClientRequestIdPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateClientRequestIdPolicy\", function() { return generateClientRequestIdPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GenerateClientRequestIdPolicy\", function() { return GenerateClientRequestIdPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nfunction generateClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        create: (nextPolicy, options) => {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        },\n    };\n}\nclass GenerateClientRequestIdPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, _requestIdHeaderName) {\n        super(nextPolicy, options);\n        this._requestIdHeaderName = _requestIdHeaderName;\n    }\n    sendRequest(request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, request.requestId);\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js ***!
  \********************************************************************************/
/*! exports provided: DefaultKeepAliveOptions, keepAlivePolicy, KeepAlivePolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultKeepAliveOptions\", function() { return DefaultKeepAliveOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keepAlivePolicy\", function() { return keepAlivePolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeepAlivePolicy\", function() { return KeepAlivePolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nconst DefaultKeepAliveOptions = {\n    enable: true,\n};\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nfunction keepAlivePolicy(keepAliveOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n        },\n    };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nclass KeepAlivePolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     *\n     * @param nextPolicy -\n     * @param options -\n     * @param keepAliveOptions -\n     */\n    constructor(nextPolicy, options, keepAliveOptions) {\n        super(nextPolicy, options);\n        this.keepAliveOptions = keepAliveOptions;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     * @returns\n     */\n    async sendRequest(request) {\n        request.keepAlive = this.keepAliveOptions.enable;\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=keepAlivePolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js ***!
  \**************************************************************************/
/*! exports provided: logPolicy, LogPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logPolicy\", function() { return logPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogPolicy\", function() { return LogPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizer */ \"./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Creates a policy that logs information about the outgoing request and the incoming responses.\n * @param loggingOptions - Logging options.\n * @returns An instance of the {@link LogPolicy}\n */\nfunction logPolicy(loggingOptions = {}) {\n    return {\n        create: (nextPolicy, options) => {\n            return new LogPolicy(nextPolicy, options, loggingOptions);\n        },\n    };\n}\n/**\n * A policy that logs information about the outgoing request and the incoming responses.\n */\nclass LogPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, { logger = _log__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].info, allowedHeaderNames = [], allowedQueryParameters = [], } = {}) {\n        super(nextPolicy, options);\n        this.logger = logger;\n        this.sanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__[\"Sanitizer\"]({ allowedHeaderNames, allowedQueryParameters });\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedHeaderNames() {\n        return this.sanitizer.allowedHeaderNames;\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedHeaderNames(allowedHeaderNames) {\n        this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedQueryParameters() {\n        return this.sanitizer.allowedQueryParameters;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedQueryParameters(allowedQueryParameters) {\n        this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n    }\n    sendRequest(request) {\n        if (!this.logger.enabled)\n            return this._nextPolicy.sendRequest(request);\n        this.logRequest(request);\n        return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n    }\n    logRequest(request) {\n        this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n    }\n    logResponse(response) {\n        this.logger(`Response status code: ${response.status}`);\n        this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n        return response;\n    }\n}\n//# sourceMappingURL=logPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js ***!
  \**********************************************************************************************/
/*! exports provided: getDefaultUserAgentKey, getPlatformSpecificData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultUserAgentKey\", function() { return getDefaultUserAgentKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPlatformSpecificData\", function() { return getPlatformSpecificData; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction getDefaultUserAgentKey() {\n    return \"x-ms-useragent\";\n}\nfunction getPlatformSpecificData() {\n    const navigator = self.navigator;\n    const osInfo = {\n        key: \"OS\",\n        value: (navigator.oscpu || navigator.platform).replace(\" \", \"\"),\n    };\n    return [osInfo];\n}\n//# sourceMappingURL=msRestUserAgentPolicy.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js ***!
  \*****************************************************************************/
/*! exports provided: ndJsonPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ndJsonPolicy\", function() { return ndJsonPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\n\nfunction ndJsonPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new NdJsonPolicy(nextPolicy, options);\n        },\n    };\n}\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     */\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    /**\n     * Sends a request.\n     */\n    async sendRequest(request) {\n        // There currently isn't a good way to bypass the serializer\n        if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n            const body = JSON.parse(request.body);\n            if (Array.isArray(body)) {\n                request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n            }\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=ndJsonPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js ***!
  \************************************************************************************/
/*! exports provided: getDefaultProxySettings, proxyPolicy, ProxyPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultProxySettings\", function() { return getDefaultProxySettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyPolicy\", function() { return proxyPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProxyPolicy\", function() { return ProxyPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nfunction getDefaultProxySettings(_proxyUrl) {\n    return undefined;\n}\nfunction proxyPolicy(_proxySettings) {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw proxyNotSupportedInBrowser;\n        },\n    };\n}\nclass ProxyPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw proxyNotSupportedInBrowser;\n    }\n    sendRequest(_request) {\n        throw proxyNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=proxyPolicy.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js ***!
  \*******************************************************************************/
/*! exports provided: DefaultRedirectOptions, redirectPolicy, RedirectPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultRedirectOptions\", function() { return DefaultRedirectOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"redirectPolicy\", function() { return redirectPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedirectPolicy\", function() { return RedirectPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\nconst DefaultRedirectOptions = {\n    handleRedirects: true,\n    maxRetries: 20,\n};\n/**\n * Creates a redirect policy, which sends a repeats the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n * @param maximumRetries - Maximum number of redirects to follow.\n * @returns An instance of the {@link RedirectPolicy}\n */\nfunction redirectPolicy(maximumRetries = 20) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        },\n    };\n}\n/**\n * Resends the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n */\nclass RedirectPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, maxRetries = 20) {\n        super(nextPolicy, options);\n        this.maxRetries = maxRetries;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request)\n            .then((response) => handleRedirect(this, response, 0));\n    }\n}\nfunction handleRedirect(policy, response, currentRetries) {\n    const { request, status } = response;\n    const locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n        const builder = _url__WEBPACK_IMPORTED_MODULE_1__[\"URLBuilder\"].parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            delete request.body;\n        }\n        return policy._nextPolicy\n            .sendRequest(request)\n            .then((res) => handleRedirect(policy, res, currentRetries + 1));\n    }\n    return Promise.resolve(response);\n}\n//# sourceMappingURL=redirectPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js ***!
  \******************************************************************************/
/*! exports provided: BaseRequestPolicy, RequestPolicyOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseRequestPolicy\", function() { return BaseRequestPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequestPolicyOptions\", function() { return RequestPolicyOptions; });\n/* harmony import */ var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../httpPipelineLogLevel */ \"./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The base class from which all request policies derive.\n */\nclass BaseRequestPolicy {\n    /**\n     * The main method to implement that manipulates a request/response.\n     */\n    constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    _nextPolicy, \n    /**\n     * The options that can be passed to a given request policy.\n     */\n    _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return this._options.shouldLog(logLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        this._options.log(logLevel, message);\n    }\n}\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nclass RequestPolicyOptions {\n    constructor(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return (!!this._logger &&\n            logLevel !== _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__[\"HttpPipelineLogLevel\"].OFF &&\n            logLevel <= this._logger.minimumLogLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meet the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    }\n}\n//# sourceMappingURL=requestPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js ***!
  \*************************************************************************************/
/*! exports provided: rpRegistrationPolicy, RPRegistrationPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rpRegistrationPolicy\", function() { return rpRegistrationPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RPRegistrationPolicy\", function() { return RPRegistrationPolicy; });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction rpRegistrationPolicy(retryTimeout = 30) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        },\n    };\n}\nclass RPRegistrationPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_1__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, _retryTimeout = 30) {\n        super(nextPolicy, options);\n        this._retryTimeout = _retryTimeout;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => registerIfNeeded(this, request, response));\n    }\n}\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        const rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            const urlPrefix = extractSubscriptionUrl(request.url);\n            return (registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(() => false)\n                .then((registrationStatus) => {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", _util_utils__WEBPACK_IMPORTED_MODULE_0__[\"generateUuid\"]());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            }));\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param originalRequest - The original request\n * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.\n * @returns A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo = false) {\n    const reqOptions = originalRequest.clone();\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers.set(\"x-ms-client-request-id\", _util_utils__WEBPACK_IMPORTED_MODULE_0__[\"generateUuid\"]());\n    // Set content-type to application/json\n    reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param body - The response body received after making the original request.\n * @returns The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    let result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody &&\n            responseBody.error &&\n            responseBody.error.message &&\n            responseBody.error.code &&\n            responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param url - The original request url\n * @returns The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    let result;\n    const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param provider - The provider name to be registered.\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n */\nasync function registerRP(policy, urlPrefix, provider, originalRequest) {\n    const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n    const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    const response = await policy._nextPolicy.sendRequest(reqOptions);\n    if (response.status !== 200) {\n        throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param url - The request url for polling\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns True if RP Registration is successful.\n */\nasync function getRegistrationStatus(policy, url, originalRequest) {\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    const res = await policy._nextPolicy.sendRequest(reqOptions);\n    const obj = res.parsedBody;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n        return true;\n    }\n    else {\n        await Object(_util_delay__WEBPACK_IMPORTED_MODULE_2__[\"delay\"])(policy._retryTimeout * 1000);\n        return getRegistrationStatus(policy, url, originalRequest);\n    }\n}\n//# sourceMappingURL=rpRegistrationPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js ***!
  \******************************************************************************/
/*! exports provided: signingPolicy, SigningPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signingPolicy\", function() { return signingPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SigningPolicy\", function() { return SigningPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n * @param authenticationProvider - The authentication provider.\n * @returns An instance of the {@link SigningPolicy}.\n */\nfunction signingPolicy(authenticationProvider) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        },\n    };\n}\n/**\n * A policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n */\nclass SigningPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, authenticationProvider) {\n        super(nextPolicy, options);\n        this.authenticationProvider = authenticationProvider;\n    }\n    signRequest(request) {\n        return this.authenticationProvider.signRequest(request);\n    }\n    sendRequest(request) {\n        return this.signRequest(request).then((nextRequest) => this._nextPolicy.sendRequest(nextRequest));\n    }\n}\n//# sourceMappingURL=signingPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js ***!
  \***************************************************************************************/
/*! exports provided: systemErrorRetryPolicy, SystemErrorRetryPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"systemErrorRetryPolicy\", function() { return systemErrorRetryPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SystemErrorRetryPolicy\", function() { return SystemErrorRetryPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/exponentialBackoffStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n * @returns An instance of the {@link SystemErrorRetryPolicy}\n */\nfunction systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        },\n    };\n}\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - The client retry count.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n */\nclass SystemErrorRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_COUNT\"];\n        this.retryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_RETRY_INTERVAL\"];\n        this.minRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(minRetryInterval)\n            ? minRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_MIN_RETRY_INTERVAL\"];\n        this.maxRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(maxRetryInterval)\n            ? maxRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_CLIENT_MAX_RETRY_INTERVAL\"];\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .catch((error) => retry(this, request, error.response, error));\n    }\n}\nasync function retry(policy, request, operationResponse, err, retryData) {\n    retryData = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"updateRetryData\"])(policy, retryData, err);\n    function shouldPolicyRetry(_response, error) {\n        if (error &&\n            error.code &&\n            (error.code === \"ETIMEDOUT\" ||\n                error.code === \"ESOCKETTIMEDOUT\" ||\n                error.code === \"ECONNREFUSED\" ||\n                error.code === \"ECONNRESET\" ||\n                error.code === \"ENOENT\")) {\n            return true;\n        }\n        return false;\n    }\n    if (Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__[\"shouldRetry\"])(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n        // If previous operation ended with an error and the policy allows a retry, do that\n        try {\n            await Object(_util_delay__WEBPACK_IMPORTED_MODULE_2__[\"delay\"])(retryData.retryInterval);\n            return policy._nextPolicy.sendRequest(request.clone());\n        }\n        catch (nestedErr) {\n            return retry(policy, request, operationResponse, nestedErr, retryData);\n        }\n    }\n    else {\n        if (err) {\n            // If the operation failed in the end, return all errors instead of just the last one\n            return Promise.reject(retryData.error);\n        }\n        return operationResponse;\n    }\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js ***!
  \**************************************************************************************/
/*! exports provided: throttlingRetryPolicy, ThrottlingRetryPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttlingRetryPolicy\", function() { return throttlingRetryPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThrottlingRetryPolicy\", function() { return ThrottlingRetryPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/index.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/throttlingRetryStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\nconst StatusCodes = _util_constants__WEBPACK_IMPORTED_MODULE_2__[\"Constants\"].HttpConstants.StatusCodes;\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n * @returns\n */\nfunction throttlingRetryPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new ThrottlingRetryPolicy(nextPolicy, options);\n        },\n    };\n}\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nclass ThrottlingRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, _handleResponse) {\n        super(nextPolicy, options);\n        this.numberOfRetries = 0;\n        this._handleResponse = _handleResponse || this._defaultResponseHandler;\n    }\n    async sendRequest(httpRequest) {\n        const response = await this._nextPolicy.sendRequest(httpRequest.clone());\n        if (response.status !== StatusCodes.TooManyRequests &&\n            response.status !== StatusCodes.ServiceUnavailable) {\n            return response;\n        }\n        else {\n            return this._handleResponse(httpRequest, response);\n        }\n    }\n    async _defaultResponseHandler(httpRequest, httpResponse) {\n        var _a;\n        const retryAfterHeader = httpResponse.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_2__[\"Constants\"].HeaderConstants.RETRY_AFTER);\n        if (retryAfterHeader) {\n            const delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n            if (delayInMs) {\n                this.numberOfRetries += 1;\n                await Object(_util_delay__WEBPACK_IMPORTED_MODULE_4__[\"delay\"])(delayInMs, undefined, {\n                    abortSignal: httpRequest.abortSignal,\n                    abortErrorMsg: StandardAbortMessage,\n                });\n                if ((_a = httpRequest.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__[\"AbortError\"](StandardAbortMessage);\n                }\n                if (this.numberOfRetries < _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_CLIENT_MAX_RETRY_COUNT\"]) {\n                    return this.sendRequest(httpRequest);\n                }\n                else {\n                    return this._nextPolicy.sendRequest(httpRequest);\n                }\n            }\n        }\n        return httpResponse;\n    }\n    static parseRetryAfterHeader(headerValue) {\n        const retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    }\n    static parseDateRetryAfterHeader(headerValue) {\n        try {\n            const now = Date.now();\n            const date = Date.parse(headerValue);\n            const diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    }\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js ***!
  \******************************************************************************/
/*! exports provided: tracingPolicy, TracingPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tracingPolicy\", function() { return tracingPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TracingPolicy\", function() { return TracingPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/index.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst createSpan = Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"createSpanFunction\"])({\n    packagePrefix: \"\",\n    namespace: \"\",\n});\n/**\n * Creates a policy that wraps outgoing requests with a tracing span.\n * @param tracingOptions - Tracing options.\n * @returns An instance of the {@link TracingPolicy} class.\n */\nfunction tracingPolicy(tracingOptions = {}) {\n    return {\n        create(nextPolicy, options) {\n            return new TracingPolicy(nextPolicy, options, tracingOptions);\n        },\n    };\n}\n/**\n * A policy that wraps outgoing requests with a tracing span.\n */\nclass TracingPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(nextPolicy, options, tracingOptions) {\n        super(nextPolicy, options);\n        this.userAgent = tracingOptions.userAgent;\n    }\n    async sendRequest(request) {\n        if (!request.tracingContext) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        const span = this.tryCreateSpan(request);\n        if (!span) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        try {\n            const response = await this._nextPolicy.sendRequest(request);\n            this.tryProcessResponse(span, response);\n            return response;\n        }\n        catch (err) {\n            this.tryProcessError(span, err);\n            throw err;\n        }\n    }\n    tryCreateSpan(request) {\n        var _a;\n        try {\n            // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.\n            // We can pass this as a separate parameter once we upgrade to the latest core-tracing.\n            const { span } = createSpan(`HTTP ${request.method}`, {\n                tracingOptions: {\n                    spanOptions: Object.assign(Object.assign({}, request.spanOptions), { kind: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"SpanKind\"].CLIENT }),\n                    tracingContext: request.tracingContext,\n                },\n            });\n            // If the span is not recording, don't do any more work.\n            if (!span.isRecording()) {\n                span.end();\n                return undefined;\n            }\n            const namespaceFromContext = (_a = request.tracingContext) === null || _a === void 0 ? void 0 : _a.getValue(Symbol.for(\"az.namespace\"));\n            if (typeof namespaceFromContext === \"string\") {\n                span.setAttribute(\"az.namespace\", namespaceFromContext);\n            }\n            span.setAttributes({\n                \"http.method\": request.method,\n                \"http.url\": request.url,\n                requestId: request.requestId,\n            });\n            if (this.userAgent) {\n                span.setAttribute(\"http.user_agent\", this.userAgent);\n            }\n            // set headers\n            const spanContext = span.spanContext();\n            const traceParentHeader = Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"getTraceParentHeader\"])(spanContext);\n            if (traceParentHeader && Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"isSpanContextValid\"])(spanContext)) {\n                request.headers.set(\"traceparent\", traceParentHeader);\n                const traceState = spanContext.traceState && spanContext.traceState.serialize();\n                // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n                if (traceState) {\n                    request.headers.set(\"tracestate\", traceState);\n                }\n            }\n            return span;\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].warning(`Skipping creating a tracing span due to an error: ${error.message}`);\n            return undefined;\n        }\n    }\n    tryProcessError(span, err) {\n        try {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"SpanStatusCode\"].ERROR,\n                message: err.message,\n            });\n            if (err.statusCode) {\n                span.setAttribute(\"http.status_code\", err.statusCode);\n            }\n            span.end();\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n    tryProcessResponse(span, response) {\n        try {\n            span.setAttribute(\"http.status_code\", response.status);\n            const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n            if (serviceRequestId) {\n                span.setAttribute(\"serviceRequestId\", serviceRequestId);\n            }\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__[\"SpanStatusCode\"].OK,\n            });\n            span.end();\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js ***!
  \********************************************************************************/
/*! exports provided: getDefaultUserAgentHeaderName, getDefaultUserAgentValue, userAgentPolicy, UserAgentPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultUserAgentHeaderName\", function() { return getDefaultUserAgentHeaderName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultUserAgentValue\", function() { return getDefaultUserAgentValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userAgentPolicy\", function() { return userAgentPolicy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserAgentPolicy\", function() { return UserAgentPolicy; });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./msRestUserAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nfunction getRuntimeInfo() {\n    const msRestRuntime = {\n        key: \"core-http\",\n        value: _util_constants__WEBPACK_IMPORTED_MODULE_2__[\"Constants\"].coreHttpVersion,\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator = \" \", valueSeparator = \"/\") {\n    return telemetryInfo\n        .map((info) => {\n        const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n        return `${info.key}${value}`;\n    })\n        .join(keySeparator);\n}\nconst getDefaultUserAgentHeaderName = _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__[\"getDefaultUserAgentKey\"];\n/**\n * The default approach to generate user agents.\n * Uses static information from this package, plus system information available from the runtime.\n */\nfunction getDefaultUserAgentValue() {\n    const runtimeInfo = getRuntimeInfo();\n    const platformSpecificData = Object(_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__[\"getPlatformSpecificData\"])();\n    const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\n/**\n * Returns a policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n * @param userAgentData - Telemetry information.\n * @returns A new {@link UserAgentPolicy}.\n */\nfunction userAgentPolicy(userAgentData) {\n    const key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n        ? Object(_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__[\"getDefaultUserAgentKey\"])()\n        : userAgentData.key;\n    const value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n        ? getDefaultUserAgentValue()\n        : userAgentData.value;\n    return {\n        create: (nextPolicy, options) => {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        },\n    };\n}\n/**\n * A policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n */\nclass UserAgentPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__[\"BaseRequestPolicy\"] {\n    constructor(_nextPolicy, _options, headerKey, headerValue) {\n        super(_nextPolicy, _options);\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n        this.headerKey = headerKey;\n        this.headerValue = headerValue;\n    }\n    sendRequest(request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    }\n    /**\n     * Adds the user agent header to the outgoing request.\n     */\n    addUserAgentHeader(request) {\n        if (!request.headers) {\n            request.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_3__[\"HttpHeaders\"]();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    }\n}\n//# sourceMappingURL=userAgentPolicy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js ***!
  \*****************************************************************************/
/*! exports provided: QueryCollectionFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QueryCollectionFormat\", function() { return QueryCollectionFormat; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nvar QueryCollectionFormat;\n(function (QueryCollectionFormat) {\n    /**\n     * CSV: Each pair of segments joined by a single comma.\n     */\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    /**\n     * SSV: Each pair of segments joined by a single space character.\n     */\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    /**\n     * TSV: Each pair of segments joined by a single tab character.\n     */\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    /**\n     * Pipes: Each pair of segments joined by a single pipe character.\n     */\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    /**\n     * Denotes this is an array of values that should be passed to the server in multiple key/value pairs, e.g. `?queryParam=value1&queryParam=value2`\n     */\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(QueryCollectionFormat || (QueryCollectionFormat = {}));\n//# sourceMappingURL=queryCollectionFormat.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/restError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/restError.js ***!
  \*****************************************************************/
/*! exports provided: RestError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RestError\", function() { return RestError; });\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/sanitizer */ \"./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js\");\n/* harmony import */ var _util_inspect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect */ \"./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst errorSanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__[\"Sanitizer\"]();\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\nclass RestError extends Error {\n    constructor(message, code, statusCode, request, response) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = code;\n        this.statusCode = statusCode;\n        this.request = request;\n        this.response = response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect__WEBPACK_IMPORTED_MODULE_1__[\"custom\"]]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n//# sourceMappingURL=restError.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/restError.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/serializer.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/serializer.js ***!
  \******************************************************************/
/*! exports provided: Serializer, serializeObject, MapperType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Serializer\", function() { return Serializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeObject\", function() { return serializeObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MapperType\", function() { return MapperType; });\n/* harmony import */ var _util_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/base64 */ \"./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\n\n\n// This file contains utility code to serialize and deserialize network operations according to `OperationSpec` objects generated by AutoRest.TypeScript from OpenAPI specifications.\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nclass Serializer {\n    constructor(\n    /**\n     * The provided model mapper.\n     */\n    modelMappers = {}, \n    /**\n     * Whether the contents are XML or not.\n     */\n    isXML) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n     * @param mapper - The definition of data models.\n     * @param value - The value.\n     * @param objectName - Name of the object. Used in the error messages.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value != undefined) {\n            const valueAsNumber = value;\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            const valueAsArray = value;\n            if (MaxItems != undefined && valueAsArray.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && valueAsArray.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && valueAsArray.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && valueAsArray.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                valueAsArray.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper.\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object.\n     * @param object - A valid Javascript object to be serialized.\n     * @param objectName - Name of the serialized object.\n     * @param options - additional options to deserialization.\n     * @returns A valid serialized Javascript object.\n     */\n    serialize(mapper, object, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_CHARKEY\"],\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper.\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object.\n     * @param responseBody - A valid Javascript entity to be deserialized.\n     * @param objectName - Name of the deserialized object.\n     * @param options - Controls behavior of XML parser and builder.\n     * @returns A valid deserialized Javascript object.\n     */\n    deserialize(mapper, responseBody, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_CHARKEY\"],\n        };\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xmlCharKey;\n                const castResponseBody = responseBody;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (castResponseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] != undefined &&\n                    castResponseBody[xmlCharKey] != undefined) {\n                    responseBody = castResponseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _util_base64__WEBPACK_IMPORTED_MODULE_0__[\"decodeString\"](responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _util_base64__WEBPACK_IMPORTED_MODULE_0__[\"encodeByteArray\"](buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _util_base64__WEBPACK_IMPORTED_MODULE_0__[\"decodeString\"](str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && _util_utils__WEBPACK_IMPORTED_MODULE_1__[\"isValidUuid\"](value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)) {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = _util_base64__WEBPACK_IMPORTED_MODULE_0__[\"encodeByteArray\"](value);\n    }\n    return returnValue;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = bufferToBase64Url(value) || \"\";\n    }\n    return returnValue;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!_util_utils__WEBPACK_IMPORTED_MODULE_1__[\"isDuration\"](value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    const elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xmlCharKey] = serializedValue;\n                tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper.\n * @param serializer - The serializer containing the entire set of mappers.\n * @param mapper - The composite mapper to resolve.\n * @param objectName - Name of the object being serialized.\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by `className`.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if (childObject == undefined &&\n                        (object[key] != undefined || propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = Object.assign(Object.assign({}, parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName != undefined) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] || {};\n                        parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"], options.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__[\"XML_ATTRKEY\"]][xmlName], propertyObjectName, options);\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_a = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _a !== void 0 ? _a : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            for (const item of paths) {\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    const element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            const discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                const typeName = mapper.type.uberParent || mapper.type.className;\n                const indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Utility function that serializes an object that might contain binary information into a plain object, array or a string.\n */\nfunction serializeObject(toSerialize) {\n    const castToSerialize = toSerialize;\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = _util_base64__WEBPACK_IMPORTED_MODULE_0__[\"encodeByteArray\"](toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        const array = [];\n        for (let i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        const dictionary = {};\n        for (const property in toSerialize) {\n            dictionary[property] = serializeObject(castToSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    const result = {};\n    for (const key of o) {\n        result[key] = key;\n    }\n    return result;\n}\n/**\n * String enum containing the string types of property mappers.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\",\n]);\n//# sourceMappingURL=serializer.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/serializer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/serviceClient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/serviceClient.js ***!
  \*********************************************************************/
/*! exports provided: ServiceClient, serializeRequestBody, createPipelineFromOptions, getPropertyParent, getOperationArgumentValueFromParameterPath, flattenResponse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceClient\", function() { return ServiceClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeRequestBody\", function() { return serializeRequestBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPipelineFromOptions\", function() { return createPipelineFromOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPropertyParent\", function() { return getPropertyParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOperationArgumentValueFromParameterPath\", function() { return getOperationArgumentValueFromParameterPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flattenResponse\", function() { return flattenResponse; });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/deserializationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js\");\n/* harmony import */ var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/keepAlivePolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js\");\n/* harmony import */ var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/redirectPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/logPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js\");\n/* harmony import */ var _operationParameter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operationParameter */ \"./node_modules/@azure/core-http/dist-esm/src/operationParameter.js\");\n/* harmony import */ var _operationSpec__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operationSpec */ \"./node_modules/@azure/core-http/dist-esm/src/operationSpec.js\");\n/* harmony import */ var _webResource__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./webResource */ \"./node_modules/@azure/core-http/dist-esm/src/webResource.js\");\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/index.js\");\n/* harmony import */ var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/userAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js\");\n/* harmony import */ var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./queryCollectionFormat */ \"./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/disableResponseDecompressionPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js\");\n/* harmony import */ var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/generateClientRequestIdPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js\");\n/* harmony import */ var _httpClientCache__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./httpClientCache */ \"./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n/* harmony import */ var _policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/ndJsonPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/proxyPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js\");\n/* harmony import */ var _policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/rpRegistrationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js\");\n/* harmony import */ var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./policies/signingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js\");\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./policies/tracingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ServiceClient sends service requests and receives responses.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param credentials - The credentials used for authentication with the service.\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(credentials, \n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options) {\n        if (!options) {\n            options = {};\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || Object(_httpClientCache__WEBPACK_IMPORTED_MODULE_19__[\"getCachedDefaultHttpClient\"])();\n        this._requestPolicyOptions = new _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_10__[\"RequestPolicyOptions\"](options.httpPipelineLogger);\n        let requestPolicyFactories;\n        if (Array.isArray(options.requestPolicyFactories)) {\n            _log__WEBPACK_IMPORTED_MODULE_20__[\"logger\"].info(\"ServiceClient: using custom request policies\");\n            requestPolicyFactories = options.requestPolicyFactories;\n        }\n        else {\n            let authPolicyFactory = undefined;\n            if (Object(_azure_core_auth__WEBPACK_IMPORTED_MODULE_12__[\"isTokenCredential\"])(credentials)) {\n                _log__WEBPACK_IMPORTED_MODULE_20__[\"logger\"].info(\"ServiceClient: creating bearer token authentication policy from provided credentials\");\n                // Create a wrapped RequestPolicyFactory here so that we can provide the\n                // correct scope to the BearerTokenAuthenticationPolicy at the first time\n                // one is requested.  This is needed because generated ServiceClient\n                // implementations do not set baseUri until after ServiceClient's constructor\n                // is finished, leaving baseUri empty at the time when it is needed to\n                // build the correct scope name.\n                const wrappedPolicyFactory = () => {\n                    let bearerTokenPolicyFactory = undefined;\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    const serviceClient = this;\n                    const serviceClientOptions = options;\n                    return {\n                        create(nextPolicy, createOptions) {\n                            const credentialScopes = getCredentialScopes(serviceClientOptions, serviceClient.baseUri);\n                            if (!credentialScopes) {\n                                throw new Error(`When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy`);\n                            }\n                            if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                                bearerTokenPolicyFactory = Object(_policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_16__[\"bearerTokenAuthenticationPolicy\"])(credentials, credentialScopes);\n                            }\n                            return bearerTokenPolicyFactory.create(nextPolicy, createOptions);\n                        },\n                    };\n                };\n                authPolicyFactory = wrappedPolicyFactory();\n            }\n            else if (credentials && typeof credentials.signRequest === \"function\") {\n                _log__WEBPACK_IMPORTED_MODULE_20__[\"logger\"].info(\"ServiceClient: creating signing policy from provided credentials\");\n                authPolicyFactory = Object(_policies_signingPolicy__WEBPACK_IMPORTED_MODULE_24__[\"signingPolicy\"])(credentials);\n            }\n            else if (credentials !== undefined && credentials !== null) {\n                throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n            }\n            _log__WEBPACK_IMPORTED_MODULE_20__[\"logger\"].info(\"ServiceClient: using default request policies\");\n            requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n            if (options.requestPolicyFactories) {\n                // options.requestPolicyFactories can also be a function that manipulates\n                // the default requestPolicyFactories array\n                const newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                if (newRequestPolicyFactories) {\n                    requestPolicyFactories = newRequestPolicyFactories;\n                }\n            }\n        }\n        this._requestPolicyFactories = requestPolicyFactories;\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    sendRequest(options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        let httpRequest;\n        try {\n            if (Object(_webResource__WEBPACK_IMPORTED_MODULE_9__[\"isWebResourceLike\"])(options)) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_9__[\"WebResource\"]();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        let httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     * @param callback - The callback to call when the response is received.\n     */\n    async sendOperationRequest(operationArguments, operationSpec, callback) {\n        var _a;\n        if (typeof operationArguments.options === \"function\") {\n            callback = operationArguments.options;\n            operationArguments.options = undefined;\n        }\n        const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n        const httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_9__[\"WebResource\"]();\n        let result;\n        try {\n            const baseUri = operationSpec.baseUrl || this.baseUri;\n            if (!baseUri) {\n                throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n            }\n            httpRequest.method = operationSpec.httpMethod;\n            httpRequest.operationSpec = operationSpec;\n            const requestUrl = _url__WEBPACK_IMPORTED_MODULE_15__[\"URLBuilder\"].parse(baseUri);\n            if (operationSpec.path) {\n                requestUrl.appendPath(operationSpec.path);\n            }\n            if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                for (const urlParameter of operationSpec.urlParameters) {\n                    let urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                    urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(urlParameter), serializerOptions);\n                    if (!urlParameter.skipEncoding) {\n                        urlParameterValue = encodeURIComponent(urlParameterValue);\n                    }\n                    requestUrl.replaceAll(`{${urlParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(urlParameter)}}`, urlParameterValue);\n                }\n            }\n            if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                for (const queryParameter of operationSpec.queryParameters) {\n                    let queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                    if (queryParameterValue !== undefined && queryParameterValue !== null) {\n                        queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(queryParameter), serializerOptions);\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null) {\n                            if (queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Multi) {\n                                if (queryParameterValue.length === 0) {\n                                    // The collection is empty, no need to try serializing the current queryParam\n                                    continue;\n                                }\n                                else {\n                                    for (const index in queryParameterValue) {\n                                        const item = queryParameterValue[index];\n                                        queryParameterValue[index] =\n                                            item === undefined || item === null ? \"\" : item.toString();\n                                    }\n                                }\n                            }\n                            else if (queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Ssv ||\n                                queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Tsv) {\n                                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                            }\n                        }\n                        if (!queryParameter.skipEncoding) {\n                            if (Array.isArray(queryParameterValue)) {\n                                for (const index in queryParameterValue) {\n                                    if (queryParameterValue[index] !== undefined &&\n                                        queryParameterValue[index] !== null) {\n                                        queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                    }\n                                }\n                            }\n                            else {\n                                queryParameterValue = encodeURIComponent(queryParameterValue);\n                            }\n                        }\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Multi &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Ssv &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_14__[\"QueryCollectionFormat\"].Tsv) {\n                            queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                        }\n                        requestUrl.setQueryParameter(queryParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(queryParameter), queryParameterValue);\n                    }\n                }\n            }\n            httpRequest.url = requestUrl.toString();\n            const contentType = operationSpec.contentType || this.requestContentType;\n            if (contentType && operationSpec.requestBody) {\n                httpRequest.headers.set(\"Content-Type\", contentType);\n            }\n            if (operationSpec.headerParameters) {\n                for (const headerParameter of operationSpec.headerParameters) {\n                    let headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                    if (headerValue !== undefined && headerValue !== null) {\n                        headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(headerParameter), serializerOptions);\n                        const headerCollectionPrefix = headerParameter.mapper\n                            .headerCollectionPrefix;\n                        if (headerCollectionPrefix) {\n                            for (const key of Object.keys(headerValue)) {\n                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                            }\n                        }\n                        else {\n                            httpRequest.headers.set(headerParameter.mapper.serializedName ||\n                                Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(headerParameter), headerValue);\n                        }\n                    }\n                }\n            }\n            const options = operationArguments.options;\n            if (options) {\n                if (options.customHeaders) {\n                    for (const customHeaderName in options.customHeaders) {\n                        httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                    }\n                }\n                if (options.abortSignal) {\n                    httpRequest.abortSignal = options.abortSignal;\n                }\n                if (options.timeout) {\n                    httpRequest.timeout = options.timeout;\n                }\n                if (options.onUploadProgress) {\n                    httpRequest.onUploadProgress = options.onUploadProgress;\n                }\n                if (options.onDownloadProgress) {\n                    httpRequest.onDownloadProgress = options.onDownloadProgress;\n                }\n                if (options.spanOptions) {\n                    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n                    httpRequest.spanOptions = options.spanOptions;\n                }\n                if (options.tracingContext) {\n                    httpRequest.tracingContext = options.tracingContext;\n                }\n                if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n                    httpRequest.shouldDeserialize = options.shouldDeserialize;\n                }\n            }\n            httpRequest.withCredentials = this._withCredentials;\n            serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n            if (httpRequest.streamResponseStatusCodes === undefined) {\n                httpRequest.streamResponseStatusCodes = Object(_operationSpec__WEBPACK_IMPORTED_MODULE_8__[\"getStreamResponseStatusCodes\"])(operationSpec);\n            }\n            let rawResponse;\n            let sendRequestError;\n            try {\n                rawResponse = await this.sendRequest(httpRequest);\n            }\n            catch (error) {\n                sendRequestError = error;\n            }\n            if (sendRequestError) {\n                if (sendRequestError.response) {\n                    sendRequestError.details = flattenResponse(sendRequestError.response, operationSpec.responses[sendRequestError.statusCode] ||\n                        operationSpec.responses[\"default\"]);\n                }\n                result = Promise.reject(sendRequestError);\n            }\n            else {\n                result = Promise.resolve(flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]));\n            }\n        }\n        catch (error) {\n            result = Promise.reject(error);\n        }\n        const cb = callback;\n        if (cb) {\n            result\n                .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n                .catch((err) => cb(err));\n        }\n        return result;\n    }\n}\nfunction serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    var _a, _b, _c, _d, _e, _f;\n    const serializerOptions = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions) !== null && _b !== void 0 ? _b : {};\n    const updatedOptions = {\n        rootName: (_c = serializerOptions.rootName) !== null && _c !== void 0 ? _c : \"\",\n        includeRoot: (_d = serializerOptions.includeRoot) !== null && _d !== void 0 ? _d : false,\n        xmlCharKey: (_e = serializerOptions.xmlCharKey) !== null && _e !== void 0 ? _e : _util_serializer_common__WEBPACK_IMPORTED_MODULE_11__[\"XML_CHARKEY\"],\n    };\n    const xmlCharKey = serializerOptions.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, xmlName, xmlElementName, serializedName, xmlNamespace, xmlNamespacePrefix } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n                const requestBodyParameterPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer__WEBPACK_IMPORTED_MODULE_1__[\"MapperType\"].Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, httpRequest.body, updatedOptions);\n                    if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_1__[\"MapperType\"].Sequence) {\n                        httpRequest.body = Object(_util_xml__WEBPACK_IMPORTED_MODULE_25__[\"stringifyXML\"])(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"prepareXMLRootList\"](value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = Object(_util_xml__WEBPACK_IMPORTED_MODULE_25__[\"stringifyXML\"])(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_1__[\"MapperType\"].String &&\n                    (((_f = operationSpec.contentType) === null || _f === void 0 ? void 0 : _f.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameter\"])(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xmlCharKey] = serializedValue;\n        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_11__[\"XML_ATTRKEY\"]] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n    let result;\n    if (typeof value === \"string\") {\n        result = value;\n    }\n    else {\n        result = defaultValueCreator();\n        if (typeof value === \"function\") {\n            result = value(result);\n        }\n    }\n    return result;\n}\nfunction createDefaultRequestPolicyFactories(authPolicyFactory, options) {\n    const factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push(Object(_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_18__[\"generateClientRequestIdPolicy\"])(options.clientRequestIdHeaderName));\n    }\n    if (authPolicyFactory) {\n        factories.push(authPolicyFactory);\n    }\n    const userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__[\"getDefaultUserAgentHeaderName\"]);\n    const userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__[\"getDefaultUserAgentValue\"]);\n    if (userAgentHeaderName && userAgentHeaderValue) {\n        factories.push(Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__[\"userAgentPolicy\"])({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n    }\n    factories.push(Object(_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_4__[\"redirectPolicy\"])());\n    factories.push(Object(_policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_23__[\"rpRegistrationPolicy\"])(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push(Object(_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__[\"exponentialRetryPolicy\"])());\n        factories.push(Object(_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_26__[\"systemErrorRetryPolicy\"])());\n        factories.push(Object(_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_27__[\"throttlingRetryPolicy\"])());\n    }\n    factories.push(Object(_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_2__[\"deserializationPolicy\"])(options.deserializationContentTypes));\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"isNode\"]) {\n        factories.push(Object(_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_22__[\"proxyPolicy\"])(options.proxySettings));\n    }\n    factories.push(Object(_policies_logPolicy__WEBPACK_IMPORTED_MODULE_6__[\"logPolicy\"])({ logger: _log__WEBPACK_IMPORTED_MODULE_20__[\"logger\"].info }));\n    return factories;\n}\n/**\n * Creates an HTTP pipeline based on the given options.\n * @param pipelineOptions - Defines options that are used to configure policies in the HTTP pipeline for an SDK client.\n * @param authPolicyFactory - An optional authentication policy factory to use for signing requests.\n * @returns A set of options that can be passed to create a new {@link ServiceClient}.\n */\nfunction createPipelineFromOptions(pipelineOptions, authPolicyFactory) {\n    const requestPolicyFactories = [];\n    if (pipelineOptions.sendStreamingJson) {\n        requestPolicyFactories.push(Object(_policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_21__[\"ndJsonPolicy\"])());\n    }\n    let userAgentValue = undefined;\n    if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n        const userAgentInfo = [];\n        userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n        // Add the default user agent value if it isn't already specified\n        // by the userAgentPrefix option.\n        const defaultUserAgentInfo = Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__[\"getDefaultUserAgentValue\"])();\n        if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n            userAgentInfo.push(defaultUserAgentInfo);\n        }\n        userAgentValue = userAgentInfo.join(\" \");\n    }\n    const keepAliveOptions = Object.assign(Object.assign({}, _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_3__[\"DefaultKeepAliveOptions\"]), pipelineOptions.keepAliveOptions);\n    const retryOptions = Object.assign(Object.assign({}, _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__[\"DefaultRetryOptions\"]), pipelineOptions.retryOptions);\n    const redirectOptions = Object.assign(Object.assign({}, _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_4__[\"DefaultRedirectOptions\"]), pipelineOptions.redirectOptions);\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"isNode\"]) {\n        requestPolicyFactories.push(Object(_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_22__[\"proxyPolicy\"])(pipelineOptions.proxyOptions));\n    }\n    const deserializationOptions = Object.assign(Object.assign({}, _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_2__[\"DefaultDeserializationOptions\"]), pipelineOptions.deserializationOptions);\n    const loggingOptions = Object.assign({}, pipelineOptions.loggingOptions);\n    requestPolicyFactories.push(Object(_policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_28__[\"tracingPolicy\"])({ userAgent: userAgentValue }), Object(_policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_3__[\"keepAlivePolicy\"])(keepAliveOptions), Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_13__[\"userAgentPolicy\"])({ value: userAgentValue }), Object(_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_18__[\"generateClientRequestIdPolicy\"])(), Object(_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_2__[\"deserializationPolicy\"])(deserializationOptions.expectedContentTypes), Object(_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_27__[\"throttlingRetryPolicy\"])(), Object(_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_26__[\"systemErrorRetryPolicy\"])(), Object(_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__[\"exponentialRetryPolicy\"])(retryOptions.maxRetries, retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs));\n    if (redirectOptions.handleRedirects) {\n        requestPolicyFactories.push(Object(_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_4__[\"redirectPolicy\"])(redirectOptions.maxRetries));\n    }\n    if (authPolicyFactory) {\n        requestPolicyFactories.push(authPolicyFactory);\n    }\n    requestPolicyFactories.push(Object(_policies_logPolicy__WEBPACK_IMPORTED_MODULE_6__[\"logPolicy\"])(loggingOptions));\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"isNode\"] && pipelineOptions.decompressResponse === false) {\n        requestPolicyFactories.push(Object(_policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_17__[\"disableResponseDecompressionPolicy\"])());\n    }\n    return {\n        httpClient: pipelineOptions.httpClient,\n        requestPolicyFactories,\n    };\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nfunction getPropertyParent(parent, propertyPath) {\n    if (parent && propertyPath) {\n        const propertyPathLength = propertyPath.length;\n        for (let i = 0; i < propertyPathLength - 1; ++i) {\n            const propertyName = propertyPath[i];\n            if (!parent[propertyName]) {\n                parent[propertyName] = {};\n            }\n            parent = parent[propertyName];\n        }\n    }\n    return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nfunction getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var _a;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            const parameterPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameterPath\"])(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            const propertyPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_7__[\"getPathStringFromParameterPath\"])(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n            if (propertyValue !== undefined && propertyValue !== null) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\n/**\n * Parses an {@link HttpOperationResponse} into a normalized HTTP response object ({@link RestResponse}).\n * @param _response - Wrapper object for http response.\n * @param responseSpec - Mappers for how to parse the response properties.\n * @returns - A normalized response object.\n */\nfunction flattenResponse(_response, responseSpec) {\n    const parsedHeaders = _response.parsedHeaders;\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const addOperationResponse = (obj) => {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response,\n        });\n    };\n    if (bodyMapper) {\n        const typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        const modelProperties = (typeName === \"Composite\" && bodyMapper.type.modelProperties) || {};\n        const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            const arrayResponse = [...(_response.parsedBody || [])];\n            for (const key of Object.keys(modelProperties)) {\n                if (modelProperties[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (const key of Object.keys(parsedHeaders)) {\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n        }\n    }\n    if (bodyMapper ||\n        _response.request.method === \"HEAD\" ||\n        _util_utils__WEBPACK_IMPORTED_MODULE_0__[\"isPrimitiveType\"](_response.parsedBody)) {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { body: _response.parsedBody }));\n    }\n    return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n}\nfunction getCredentialScopes(options, baseUri) {\n    if (options === null || options === void 0 ? void 0 : options.credentialScopes) {\n        const scopes = options.credentialScopes;\n        return Array.isArray(scopes)\n            ? scopes.map((scope) => new URL(scope).toString())\n            : new URL(scopes).toString();\n    }\n    if (baseUri) {\n        return `${baseUri}/.default`;\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/serviceClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/url.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/url.js ***!
  \***********************************************************/
/*! exports provided: URLQuery, URLBuilder, URLToken, isAlphaNumericCharacter, URLTokenizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URLQuery\", function() { return URLQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URLBuilder\", function() { return URLBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URLToken\", function() { return URLToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAlphaNumericCharacter\", function() { return isAlphaNumericCharacter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URLTokenizer\", function() { return URLTokenizer; });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nclass URLQuery {\n    constructor() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    any() {\n        return Object.keys(this._rawQuery).length > 0;\n    }\n    /**\n     * Get the keys of the query string.\n     */\n    keys() {\n        return Object.keys(this._rawQuery);\n    }\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    set(parameterName, parameterValue) {\n        const caseParameterValue = parameterValue;\n        if (parameterName) {\n            if (caseParameterValue !== undefined && caseParameterValue !== null) {\n                const newValue = Array.isArray(caseParameterValue)\n                    ? caseParameterValue\n                    : caseParameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    get(parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    }\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    toString() {\n        let result = \"\";\n        for (const parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            const parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                const parameterStrings = [];\n                for (const parameterValueElement of parameterValue) {\n                    parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += `${parameterName}=${parameterValue}`;\n            }\n        }\n        return result;\n    }\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    static parse(text) {\n        const result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            let currentState = \"ParameterName\";\n            let parameterName = \"\";\n            let parameterValue = \"\";\n            for (let i = 0; i < text.length; ++i) {\n                const currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    }\n}\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nclass URLBuilder {\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    setScheme(scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    }\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    getScheme() {\n        return this._scheme;\n    }\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    setHost(host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    }\n    /**\n     * Get the host that has been set in this URL.\n     */\n    getHost() {\n        return this._host;\n    }\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    setPort(port) {\n        if (port === undefined || port === null || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    }\n    /**\n     * Get the port that has been set in this URL.\n     */\n    getPort() {\n        return this._port;\n    }\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    setPath(path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            const schemeIndex = path.indexOf(\"://\");\n            if (schemeIndex !== -1) {\n                const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n                // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n                // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n                this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    }\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    appendPath(path) {\n        if (path) {\n            let currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    }\n    /**\n     * Get the path that has been set in this URL.\n     */\n    getPath() {\n        return this._path;\n    }\n    /**\n     * Set the query in this URL.\n     */\n    setQuery(query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    }\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    setQueryParameter(queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    getQueryParameterValue(queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    }\n    /**\n     * Get the query in this URL.\n     */\n    getQuery() {\n        return this._query ? this._query.toString() : undefined;\n    }\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    set(text, startState) {\n        const tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            const token = tokenizer.current();\n            let tokenPath;\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n                }\n            }\n        }\n    }\n    /**\n     * Serializes the URL as a string.\n     * @returns the URL as a string.\n     */\n    toString() {\n        let result = \"\";\n        if (this._scheme) {\n            result += `${this._scheme}://`;\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += `:${this._port}`;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += `?${this._query.toString()}`;\n        }\n        return result;\n    }\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    replaceAll(searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"replaceAll\"])(this.getScheme(), searchValue, replaceValue));\n            this.setHost(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"replaceAll\"])(this.getHost(), searchValue, replaceValue));\n            this.setPort(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"replaceAll\"])(this.getPort(), searchValue, replaceValue));\n            this.setPath(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"replaceAll\"])(this.getPath(), searchValue, replaceValue));\n            this.setQuery(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__[\"replaceAll\"])(this.getQuery(), searchValue, replaceValue));\n        }\n    }\n    /**\n     * Parses a given string URL into a new {@link URLBuilder}.\n     */\n    static parse(text) {\n        const result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    }\n}\nclass URLToken {\n    constructor(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    static scheme(text) {\n        return new URLToken(text, \"SCHEME\");\n    }\n    static host(text) {\n        return new URLToken(text, \"HOST\");\n    }\n    static port(text) {\n        return new URLToken(text, \"PORT\");\n    }\n    static path(text) {\n        return new URLToken(text, \"PATH\");\n    }\n    static query(text) {\n        return new URLToken(text, \"QUERY\");\n    }\n}\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nfunction isAlphaNumericCharacter(character) {\n    const characterCode = character.charCodeAt(0);\n    return ((48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nclass URLTokenizer {\n    constructor(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    current() {\n        return this._currentToken;\n    }\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    next() {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n            }\n        }\n        return !!this._currentToken;\n    }\n}\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    let result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    let endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    let result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        const currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, (character) => isAlphaNumericCharacter(character));\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer, ...terminatingCharacters) {\n    return readWhile(tokenizer, (character) => terminatingCharacters.indexOf(character) === -1);\n}\nfunction nextScheme(tokenizer) {\n    const scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    const schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    const host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    const port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    const path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    const query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n//# sourceMappingURL=url.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/url.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js ***!
  \***************************************************************************/
/*! exports provided: encodeString, encodeByteArray, decodeString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeString\", function() { return encodeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeByteArray\", function() { return encodeByteArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeString\", function() { return decodeString; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode\n */\nfunction encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - The Uint8Aray to encode\n */\nfunction encodeByteArray(value) {\n    let str = \"\";\n    for (let i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - The base64 string to decode\n */\nfunction decodeString(value) {\n    const byteString = atob(value);\n    const arr = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n//# sourceMappingURL=base64.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/constants.js ***!
  \**********************************************************************/
/*! exports provided: Constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Constants\", function() { return Constants; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n    /**\n     * The core-http version\n     */\n    coreHttpVersion: \"2.2.5\",\n    /**\n     * Specifies HTTP.\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    /**\n     * Specifies NO Proxy.\n     */\n    NO_PROXY: \"NO_PROXY\",\n    /**\n     * Specifies ALL Proxy.\n     */\n    ALL_PROXY: \"ALL_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\",\n        },\n        StatusCodes: {\n            TooManyRequests: 429,\n            ServiceUnavailable: 503,\n        },\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         */\n        USER_AGENT: \"User-Agent\",\n    },\n};\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/constants.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/delay.js ***!
  \******************************************************************/
/*! exports provided: delay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delay\", function() { return delay; });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/index.js\");\n/* harmony import */ var _typeguards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeguards */ \"./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *   @param abortSignal - The abortSignal associated with containing operation.\n *   @param abortErrorMsg - The abort error message associated with containing operation.\n * @returns - Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__[\"AbortError\"]((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (Object(_typeguards__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(timer)) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n//# sourceMappingURL=delay.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/delay.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js ***!
  \***************************************************************************************/
/*! exports provided: DEFAULT_CLIENT_RETRY_COUNT, DEFAULT_CLIENT_RETRY_INTERVAL, DEFAULT_CLIENT_MAX_RETRY_INTERVAL, DEFAULT_CLIENT_MIN_RETRY_INTERVAL, isNumber, shouldRetry, updateRetryData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CLIENT_RETRY_COUNT\", function() { return DEFAULT_CLIENT_RETRY_COUNT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CLIENT_RETRY_INTERVAL\", function() { return DEFAULT_CLIENT_RETRY_INTERVAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CLIENT_MAX_RETRY_INTERVAL\", function() { return DEFAULT_CLIENT_MAX_RETRY_INTERVAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CLIENT_MIN_RETRY_INTERVAL\", function() { return DEFAULT_CLIENT_MIN_RETRY_INTERVAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shouldRetry\", function() { return shouldRetry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateRetryData\", function() { return updateRetryData; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nconst DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\nfunction isNumber(n) {\n    return typeof n === \"number\";\n}\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(retryLimit, predicate, retryData, response, error) {\n    if (!predicate(response, error)) {\n        return false;\n    }\n    return retryData.retryCount < retryLimit;\n}\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nfunction updateRetryData(retryOptions, retryData = { retryCount: 0, retryInterval: 0 }, err) {\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n    const boundedRandDelta = retryOptions.retryInterval * 0.8 +\n        Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);\n    return retryData;\n}\n//# sourceMappingURL=exponentialBackoffStrategy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js ***!
  \****************************************************************************/
/*! exports provided: custom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"custom\", function() { return custom; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst custom = {};\n//# sourceMappingURL=inspect.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js ***!
  \**********************************************************************/
/*! exports provided: Sanitizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sanitizer\", function() { return Sanitizer; });\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst RedactedString = \"REDACTED\";\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\nclass Sanitizer {\n    constructor({ allowedHeaderNames = [], allowedQueryParameters = [] } = {}) {\n        allowedHeaderNames = Array.isArray(allowedHeaderNames)\n            ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n            : defaultAllowedHeaderNames;\n        allowedQueryParameters = Array.isArray(allowedQueryParameters)\n            ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n            : defaultAllowedQueryParameters;\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"_headersMap\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"isObject\"])(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(value) {\n        return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n    }\n    sanitizeQuery(value) {\n        return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n    }\n    sanitizeObject(value, allowedKeys, accessor) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (allowedKeys.has(k.toLowerCase())) {\n                sanitized[k] = accessor(value, k);\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const urlBuilder = _url__WEBPACK_IMPORTED_MODULE_0__[\"URLBuilder\"].parse(value);\n        const queryString = urlBuilder.getQuery();\n        if (!queryString) {\n            return value;\n        }\n        const query = _url__WEBPACK_IMPORTED_MODULE_0__[\"URLQuery\"].parse(queryString);\n        for (const k of query.keys()) {\n            if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n                query.set(k, RedactedString);\n            }\n        }\n        urlBuilder.setQuery(query.toString());\n        return urlBuilder.toString();\n    }\n}\n//# sourceMappingURL=sanitizer.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js ***!
  \******************************************************************************/
/*! exports provided: XML_ATTRKEY, XML_CHARKEY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XML_ATTRKEY\", function() { return XML_ATTRKEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XML_CHARKEY\", function() { return XML_CHARKEY; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=serializer.common.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js ***!
  \************************************************************************************/
/*! exports provided: DEFAULT_CLIENT_MAX_RETRY_COUNT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CLIENT_MAX_RETRY_COUNT\", function() { return DEFAULT_CLIENT_MAX_RETRY_COUNT; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Maximum number of retries for the throttling retry policy\n */\nconst DEFAULT_CLIENT_MAX_RETRY_COUNT = 3;\n//# sourceMappingURL=throttlingRetryStrategy.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js ***!
  \***********************************************************************/
/*! exports provided: isDefined */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if the value is not null or undefined.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n//# sourceMappingURL=typeguards.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/utils.js ***!
  \******************************************************************/
/*! exports provided: isNode, urlIsHTTPS, encodeUri, stripResponse, stripRequest, isValidUuid, generateUuid, executePromisesSequentially, promiseToCallback, promiseToServiceCallback, prepareXMLRootList, applyMixins, isDuration, replaceAll, isPrimitiveType, getEnvironmentValue, isObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNode\", function() { return isNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"urlIsHTTPS\", function() { return urlIsHTTPS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeUri\", function() { return encodeUri; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stripResponse\", function() { return stripResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stripRequest\", function() { return stripRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidUuid\", function() { return isValidUuid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateUuid\", function() { return generateUuid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"executePromisesSequentially\", function() { return executePromisesSequentially; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"promiseToCallback\", function() { return promiseToCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"promiseToServiceCallback\", function() { return promiseToServiceCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepareXMLRootList\", function() { return prepareXMLRootList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyMixins\", function() { return applyMixins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDuration\", function() { return isDuration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replaceAll\", function() { return replaceAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimitiveType\", function() { return isPrimitiveType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEnvironmentValue\", function() { return getEnvironmentValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _serializer_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nconst isNode = typeof process !== \"undefined\" &&\n    !!process.version &&\n    !!process.versions &&\n    !!process.versions.node;\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nfunction urlIsHTTPS(urlToCheck) {\n    return urlToCheck.protocol.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_0__[\"Constants\"].HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nfunction encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nfunction stripResponse(response) {\n    const strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nfunction stripRequest(request) {\n    const strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction generateUuid() {\n    return Object(uuid__WEBPACK_IMPORTED_MODULE_2__[\"v4\"])();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nfunction executePromisesSequentially(promiseFactories, kickstart) {\n    let result = Promise.resolve(kickstart);\n    promiseFactories.forEach((promiseFactory) => {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (cb) => {\n        promise\n            .then((data) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            return cb(undefined, data);\n        })\n            .catch((err) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nfunction promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return (cb) => {\n        promise\n            .then((data) => {\n            return process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        })\n            .catch((err) => {\n            process.nextTick(cb, err);\n        });\n    };\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_serializer_common__WEBPACK_IMPORTED_MODULE_1__[\"XML_ATTRKEY\"]] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nfunction applyMixins(targetCtorParam, sourceCtors) {\n    const castTargetCtorParam = targetCtorParam;\n    sourceCtors.forEach((sourceCtor) => {\n        Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n            castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n        });\n    });\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nfunction replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nfunction isPrimitiveType(value) {\n    return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=utils.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/utils.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js ***!
  \************************************************************************/
/*! exports provided: parseXML, stringifyXML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseXML\", function() { return parseXML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringifyXML\", function() { return stringifyXML; });\n/* harmony import */ var _serializer_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nif (!self.document || !self.DOMParser || !self.Node || !self.XMLSerializer) {\n    throw new Error(`This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. `);\n}\nlet cachedDoc;\nfunction getDoc() {\n    if (!cachedDoc) {\n        cachedDoc = document.implementation.createDocument(null, null, null);\n    }\n    return cachedDoc;\n}\nlet cachedParser;\nfunction getParser() {\n    if (!cachedParser) {\n        cachedParser = new DOMParser();\n    }\n    return cachedParser;\n}\nlet cachedSerializer;\nfunction getSerializer() {\n    if (!cachedSerializer) {\n        cachedSerializer = new XMLSerializer();\n    }\n    return cachedSerializer;\n}\nfunction parseXML(str, opts = {}) {\n    var _a, _b, _c;\n    try {\n        const updatedOptions = {\n            rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__[\"XML_CHARKEY\"],\n        };\n        const dom = getParser().parseFromString(str, \"application/xml\");\n        throwIfError(dom);\n        let obj;\n        if (updatedOptions.includeRoot) {\n            obj = domToObject(dom, updatedOptions);\n        }\n        else {\n            obj = domToObject(dom.childNodes[0], updatedOptions);\n        }\n        return Promise.resolve(obj);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nlet errorNS;\nfunction getErrorNamespace() {\n    var _a;\n    if (errorNS === undefined) {\n        try {\n            errorNS =\n                (_a = getParser().parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n                    .namespaceURI) !== null && _a !== void 0 ? _a : \"\";\n        }\n        catch (ignored) {\n            // Most browsers will return a document containing <parsererror>, but IE will throw.\n            errorNS = \"\";\n        }\n    }\n    return errorNS;\n}\nfunction throwIfError(dom) {\n    const parserErrors = dom.getElementsByTagName(\"parsererror\");\n    if (parserErrors.length > 0 && getErrorNamespace()) {\n        for (let i = 0; i < parserErrors.length; i++) {\n            if (parserErrors[i].namespaceURI === errorNS) {\n                throw new Error(parserErrors[i].innerHTML);\n            }\n        }\n    }\n}\nfunction isElement(node) {\n    return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node) {\n    return isElement(node) && node.hasAttributes() ? node : undefined;\n}\nfunction domToObject(node, options) {\n    let result = {};\n    const childNodeCount = node.childNodes.length;\n    const firstChildNode = node.childNodes[0];\n    const onlyChildTextValue = (firstChildNode &&\n        childNodeCount === 1 &&\n        firstChildNode.nodeType === Node.TEXT_NODE &&\n        firstChildNode.nodeValue) ||\n        undefined;\n    const elementWithAttributes = asElementWithAttributes(node);\n    if (elementWithAttributes) {\n        result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__[\"XML_ATTRKEY\"]] = {};\n        for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n            const attr = elementWithAttributes.attributes[i];\n            result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__[\"XML_ATTRKEY\"]][attr.nodeName] = attr.nodeValue;\n        }\n        if (onlyChildTextValue) {\n            result[options.xmlCharKey] = onlyChildTextValue;\n        }\n    }\n    else if (childNodeCount === 0) {\n        result = \"\";\n    }\n    else if (onlyChildTextValue) {\n        result = onlyChildTextValue;\n    }\n    if (!onlyChildTextValue) {\n        for (let i = 0; i < childNodeCount; i++) {\n            const child = node.childNodes[i];\n            // Ignore leading/trailing whitespace nodes\n            if (child.nodeType !== Node.TEXT_NODE) {\n                const childObject = domToObject(child, options);\n                if (!result[child.nodeName]) {\n                    result[child.nodeName] = childObject;\n                }\n                else if (Array.isArray(result[child.nodeName])) {\n                    result[child.nodeName].push(childObject);\n                }\n                else {\n                    result[child.nodeName] = [result[child.nodeName], childObject];\n                }\n            }\n        }\n    }\n    return result;\n}\nfunction stringifyXML(content, opts = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"root\",\n        includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__[\"XML_CHARKEY\"],\n    };\n    const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n    return ('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' +\n        getSerializer().serializeToString(dom));\n}\nfunction buildAttributes(attrs) {\n    const result = [];\n    for (const key of Object.keys(attrs)) {\n        const attr = getDoc().createAttribute(key);\n        attr.value = attrs[key].toString();\n        result.push(attr);\n    }\n    return result;\n}\nfunction buildNode(obj, elementName, options) {\n    if (obj === undefined ||\n        obj === null ||\n        typeof obj === \"string\" ||\n        typeof obj === \"number\" ||\n        typeof obj === \"boolean\") {\n        const elem = getDoc().createElement(elementName);\n        elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n        return [elem];\n    }\n    else if (Array.isArray(obj)) {\n        const result = [];\n        for (const arrayElem of obj) {\n            for (const child of buildNode(arrayElem, elementName, options)) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n    else if (typeof obj === \"object\") {\n        const elem = getDoc().createElement(elementName);\n        for (const key of Object.keys(obj)) {\n            if (key === _serializer_common__WEBPACK_IMPORTED_MODULE_0__[\"XML_ATTRKEY\"]) {\n                for (const attr of buildAttributes(obj[key])) {\n                    elem.attributes.setNamedItem(attr);\n                }\n            }\n            else if (key === options.xmlCharKey) {\n                elem.textContent = obj[key].toString();\n            }\n            else {\n                for (const child of buildNode(obj[key], key, options)) {\n                    elem.appendChild(child);\n                }\n            }\n        }\n        return [elem];\n    }\n    else {\n        throw new Error(`Illegal value passed to buildObject: ${obj}`);\n    }\n}\n//# sourceMappingURL=xml.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/webResource.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/webResource.js ***!
  \*******************************************************************/
/*! exports provided: isWebResourceLike, WebResource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWebResourceLike\", function() { return isWebResourceLike; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebResource\", function() { return WebResource; });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction isWebResourceLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.url === \"string\" &&\n            typeof castObject.method === \"string\" &&\n            typeof castObject.headers === \"object\" &&\n            Object(_httpHeaders__WEBPACK_IMPORTED_MODULE_0__[\"isHttpHeadersLike\"])(castObject.headers) &&\n            typeof castObject.validateRequestProperties === \"function\" &&\n            typeof castObject.prepare === \"function\" &&\n            typeof castObject.clone === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n */\nclass WebResource {\n    constructor(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, decompressResponse, streamResponseStatusCodes) {\n        this.streamResponseBody = streamResponseBody;\n        this.streamResponseStatusCodes = streamResponseStatusCodes;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = Object(_httpHeaders__WEBPACK_IMPORTED_MODULE_0__[\"isHttpHeadersLike\"])(headers) ? headers : new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__[\"HttpHeaders\"](headers);\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n        this.proxySettings = proxySettings;\n        this.keepAlive = keepAlive;\n        this.decompressResponse = decompressResponse;\n        this.requestId = this.headers.get(\"x-ms-client-request-id\") || Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"generateUuid\"])();\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    validateRequestProperties() {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    }\n    /**\n     * Prepares the request.\n     * @param options - Options to provide for preparing the request.\n     * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    prepare(options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method === undefined ||\n            options.method === null ||\n            typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate === undefined ||\n            options.pathTemplate === null ||\n            typeof options.pathTemplate.valueOf() !== \"string\") &&\n            (options.url === undefined ||\n                options.url === null ||\n                typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error('options.url must be of type \"string\".');\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error('The provided method \"' +\n                    options.method +\n                    '\" is invalid. Supported HTTP methods are: ' +\n                    JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            const { pathTemplate, pathParameters } = options;\n            if (typeof pathTemplate !== \"string\") {\n                throw new Error('options.pathTemplate must be of type \"string\".');\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            const baseUrl = options.baseUrl;\n            let url = baseUrl +\n                (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n                (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n            const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n            if (segments && segments.length) {\n                if (!pathParameters) {\n                    throw new Error(`pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`);\n                }\n                segments.forEach(function (item) {\n                    const pathParamName = item.slice(1, -1);\n                    const pathParam = pathParameters[pathParamName];\n                    if (pathParam === null ||\n                        pathParam === undefined ||\n                        !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n                        throw new Error(`pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                            ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                            `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                            `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`);\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url = url.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(`options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url = url.replace(item, pathParam.value);\n                        }\n                        else {\n                            url = url.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            const queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(`options.queryParameters must be of type object. It should be a JSON object ` +\n                    `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n                    `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`);\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            const queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (const queryParamName in queryParameters) {\n                const queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(`options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            const headers = options.headers;\n            for (const headerName of Object.keys(options.headers)) {\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", this.requestId);\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly\n        this.body = options.body;\n        if (options.body !== undefined && options.body !== null) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new _serializer__WEBPACK_IMPORTED_MODULE_1__[\"Serializer\"](options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        if (options.spanOptions) {\n            this.spanOptions = options.spanOptions;\n        }\n        if (options.tracingContext) {\n            this.tracingContext = options.tracingContext;\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        return this;\n    }\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns The clone of this WebResource HTTP request object.\n     */\n    clone() {\n        const result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.decompressResponse, this.streamResponseStatusCodes);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=webResource.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/webResource.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js ***!
  \*********************************************************************/
/*! exports provided: XhrHttpClient, parseHeaders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XhrHttpClient\", function() { return XhrHttpClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseHeaders\", function() { return parseHeaders; });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/index.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nclass XhrHttpClient {\n    sendRequest(request) {\n        var _a;\n        const xhr = new XMLHttpRequest();\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        const abortSignal = request.abortSignal;\n        if (abortSignal) {\n            if (abortSignal.aborted) {\n                return Promise.reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__[\"AbortError\"](\"The operation was aborted.\"));\n            }\n            const listener = () => {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener);\n            xhr.addEventListener(\"readystatechange\", () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        if (request.formData) {\n            const formData = request.formData;\n            const requestForm = new FormData();\n            const appendFormValue = (key, value) => {\n                if (value &&\n                    Object.prototype.hasOwnProperty.call(value, \"value\") &&\n                    Object.prototype.hasOwnProperty.call(value, \"options\")) {\n                    requestForm.append(key, value.value, value.options);\n                }\n                else {\n                    requestForm.append(key, value);\n                }\n            };\n            for (const formKey of Object.keys(formData)) {\n                const formValue = formData[formKey];\n                if (Array.isArray(formValue)) {\n                    for (let j = 0; j < formValue.length; j++) {\n                        appendFormValue(formKey, formValue[j]);\n                    }\n                }\n                else {\n                    appendFormValue(formKey, formValue);\n                }\n            }\n            request.body = requestForm;\n            request.formData = undefined;\n            const contentType = request.headers.get(\"Content-Type\");\n            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                // browser will automatically apply a suitable content-type header\n                request.headers.remove(\"Content-Type\");\n            }\n        }\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (const header of request.headers.headersArray()) {\n            xhr.setRequestHeader(header.name, header.value);\n        }\n        xhr.responseType =\n            ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.size) || request.streamResponseBody ? \"blob\" : \"text\";\n        // tslint:disable-next-line:no-null-keyword\n        xhr.send(request.body === undefined ? null : request.body);\n        if (xhr.responseType === \"blob\") {\n            return new Promise((resolve, reject) => {\n                handleBlobResponse(xhr, request, resolve, reject);\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", () => resolve({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    bodyAsText: xhr.responseText,\n                }));\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    }\n}\nfunction handleBlobResponse(xhr, request, res, rej) {\n    xhr.addEventListener(\"readystatechange\", () => {\n        var _a;\n        // Resolve as soon as headers are loaded\n        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            if (request.streamResponseBody || ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(xhr.status))) {\n                const blobBody = new Promise((resolve, reject) => {\n                    xhr.addEventListener(\"load\", () => {\n                        resolve(xhr.response);\n                    });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n                res({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    blobBody,\n                });\n            }\n            else {\n                xhr.addEventListener(\"load\", () => {\n                    // xhr.response is of Blob type if the request is sent with xhr.responseType === \"blob\"\n                    // but the status code is not one of the stream response status codes,\n                    // so treat it as text and convert from Blob to text\n                    if (xhr.response) {\n                        // Blob.text() is not supported in IE so using FileReader instead\n                        const reader = new FileReader();\n                        reader.onload = function (e) {\n                            var _a;\n                            const text = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;\n                            res({\n                                request,\n                                status: xhr.status,\n                                headers: parseHeaders(xhr),\n                                bodyAsText: text,\n                            });\n                        };\n                        reader.onerror = function (_e) {\n                            rej(reader.error);\n                        };\n                        reader.readAsText(xhr.response, \"UTF-8\");\n                    }\n                    else {\n                        res({\n                            request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr),\n                        });\n                    }\n                });\n            }\n        }\n    });\n}\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", (rawEvent) => listener({\n            loadedBytes: rawEvent.loaded,\n        }));\n    }\n}\n// exported locally for testing\nfunction parseHeaders(xhr) {\n    const responseHeaders = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__[\"HttpHeaders\"]();\n    const headerLines = xhr\n        .getAllResponseHeaders()\n        .trim()\n        .split(/[\\r\\n]+/);\n    for (const line of headerLines) {\n        const index = line.indexOf(\":\");\n        const headerName = line.slice(0, index);\n        const headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", () => reject(new _restError__WEBPACK_IMPORTED_MODULE_2__[\"RestError\"](`Failed to send request to ${request.url}`, _restError__WEBPACK_IMPORTED_MODULE_2__[\"RestError\"].REQUEST_SEND_ERROR, undefined, request)));\n    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__[\"AbortError\"](\"The operation was aborted.\");\n    xhr.addEventListener(\"abort\", () => reject(abortError));\n    xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n//# sourceMappingURL=xhrHttpClient.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js ***!
  \*********************************************************************/
/*! exports provided: isTracingDisabled, createSpanFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTracingDisabled\", function() { return isTracingDisabled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSpanFunction\", function() { return createSpanFunction; });\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction isTracingDisabled() {\n    var _a;\n    if (typeof process === \"undefined\") {\n        // not supported in browser for now without polyfills\n        return false;\n    }\n    const azureTracingDisabledValue = (_a = process.env.AZURE_TRACING_DISABLED) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    if (azureTracingDisabledValue === \"false\" || azureTracingDisabledValue === \"0\") {\n        return false;\n    }\n    return Boolean(azureTracingDisabledValue);\n}\n/**\n * Creates a function that can be used to create spans using the global tracer.\n *\n * Usage:\n *\n * ```typescript\n * // once\n * const createSpan = createSpanFunction({ packagePrefix: \"Azure.Data.AppConfiguration\", namespace: \"Microsoft.AppConfiguration\" });\n *\n * // in each operation\n * const span = createSpan(\"deleteConfigurationSetting\", operationOptions);\n *    // code...\n * span.end();\n * ```\n *\n * @hidden\n * @param args - allows configuration of the prefix for each span as well as the az.namespace field.\n */\nfunction createSpanFunction(args) {\n    return function (operationName, operationOptions) {\n        const tracer = Object(_interfaces__WEBPACK_IMPORTED_MODULE_0__[\"getTracer\"])();\n        const tracingOptions = (operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) || {};\n        const spanOptions = Object.assign({ kind: _interfaces__WEBPACK_IMPORTED_MODULE_0__[\"SpanKind\"].INTERNAL }, tracingOptions.spanOptions);\n        const spanName = args.packagePrefix ? `${args.packagePrefix}.${operationName}` : operationName;\n        let span;\n        if (isTracingDisabled()) {\n            span = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"trace\"].wrapSpanContext(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"INVALID_SPAN_CONTEXT\"]);\n        }\n        else {\n            span = tracer.startSpan(spanName, spanOptions, tracingOptions.tracingContext);\n        }\n        if (args.namespace) {\n            span.setAttribute(\"az.namespace\", args.namespace);\n        }\n        let newSpanOptions = tracingOptions.spanOptions || {};\n        if (span.isRecording() && args.namespace) {\n            newSpanOptions = Object.assign(Object.assign({}, tracingOptions.spanOptions), { attributes: Object.assign(Object.assign({}, spanOptions.attributes), { \"az.namespace\": args.namespace }) });\n        }\n        const newTracingOptions = Object.assign(Object.assign({}, tracingOptions), { spanOptions: newSpanOptions, tracingContext: Object(_interfaces__WEBPACK_IMPORTED_MODULE_0__[\"setSpan\"])(tracingOptions.tracingContext || _interfaces__WEBPACK_IMPORTED_MODULE_0__[\"context\"].active(), span) });\n        const newOperationOptions = Object.assign(Object.assign({}, operationOptions), { tracingOptions: newTracingOptions });\n        return {\n            span,\n            updatedOptions: newOperationOptions\n        };\n    };\n}\n//# sourceMappingURL=createSpan.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/index.js ***!
  \****************************************************************/
/*! exports provided: createSpanFunction, context, getSpan, getSpanContext, getTracer, isSpanContextValid, setSpan, setSpanContext, SpanKind, SpanStatusCode, extractSpanContextFromTraceParentHeader, getTraceParentHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createSpan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSpan */ \"./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createSpanFunction\", function() { return _createSpan__WEBPACK_IMPORTED_MODULE_0__[\"createSpanFunction\"]; });\n\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"context\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"context\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSpan\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"getSpan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSpanContext\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"getSpanContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTracer\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"getTracer\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSpanContextValid\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"isSpanContextValid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setSpan\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"setSpan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setSpanContext\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"setSpanContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpanKind\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"SpanKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpanStatusCode\", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_1__[\"SpanStatusCode\"]; });\n\n/* harmony import */ var _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/traceParentHeader */ \"./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"extractSpanContextFromTraceParentHeader\", function() { return _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__[\"extractSpanContextFromTraceParentHeader\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTraceParentHeader\", function() { return _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__[\"getTraceParentHeader\"]; });\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// Tracers and wrappers\n\n// Shared interfaces\n\n// Utilities\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-tracing/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js ***!
  \*********************************************************************/
/*! exports provided: SpanKind, getSpan, setSpan, setSpanContext, getSpanContext, isSpanContextValid, getTracer, context, SpanStatusCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpanKind\", function() { return SpanKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpan\", function() { return getSpan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSpan\", function() { return setSpan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSpanContext\", function() { return setSpanContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpanContext\", function() { return getSpanContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSpanContextValid\", function() { return isSpanContextValid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTracer\", function() { return getTracer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"context\", function() { return context; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpanStatusCode\", function() { return SpanStatusCode; });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The kind of span.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n/**\n * Return the span if one exists\n *\n * @param context - context to get span from\n */\nfunction getSpan(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].getSpan(context);\n}\n/**\n * Set the span on a context\n *\n * @param context - context to use as parent\n * @param span - span to set active\n */\nfunction setSpan(context, span) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].setSpan(context, span);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context - context to set active span on\n * @param spanContext - span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].setSpanContext(context, spanContext);\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context - context to get values from\n */\nfunction getSpanContext(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].getSpanContext(context);\n}\n/**\n * Returns true of the given {@link SpanContext} is valid.\n * A valid {@link SpanContext} is one which has a valid trace ID and span ID as per the spec.\n *\n * @param context - the {@link SpanContext} to validate.\n *\n * @returns true if the {@link SpanContext} is valid, false otherwise.\n */\nfunction isSpanContextValid(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].isSpanContextValid(context);\n}\nfunction getTracer(name, version) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"trace\"].getTracer(name || \"azure/core-tracing\", version);\n}\n/** Entrypoint for context API */\nconst context = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__[\"context\"];\n/** SpanStatusCode */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=interfaces.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js ***!
  \**********************************************************************************/
/*! exports provided: extractSpanContextFromTraceParentHeader, getTraceParentHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractSpanContextFromTraceParentHeader\", function() { return extractSpanContextFromTraceParentHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTraceParentHeader\", function() { return getTraceParentHeader; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst VERSION = \"00\";\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent - Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nfunction extractSpanContextFromTraceParentHeader(traceParentHeader) {\n    const parts = traceParentHeader.split(\"-\");\n    if (parts.length !== 4) {\n        return;\n    }\n    const [version, traceId, spanId, traceOptions] = parts;\n    if (version !== VERSION) {\n        return;\n    }\n    const traceFlags = parseInt(traceOptions, 16);\n    const spanContext = {\n        spanId,\n        traceId,\n        traceFlags\n    };\n    return spanContext;\n}\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext - Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nfunction getTraceParentHeader(spanContext) {\n    const missingFields = [];\n    if (!spanContext.traceId) {\n        missingFields.push(\"traceId\");\n    }\n    if (!spanContext.spanId) {\n        missingFields.push(\"spanId\");\n    }\n    if (missingFields.length) {\n        return;\n    }\n    const flags = spanContext.traceFlags || 0 /* NONE */;\n    const hexFlags = flags.toString(16);\n    const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n    // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n    return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n//# sourceMappingURL=traceParentHeader.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/debug.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/debug.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log */ \"./node_modules/@azure/logger/dist-esm/src/log.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: _log__WEBPACK_IMPORTED_MODULE_0__[\"log\"]\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (debugObj);\n//# sourceMappingURL=debug.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/@azure/logger/dist-esm/src/debug.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/index.js ***!
  \**********************************************************/
/*! exports provided: AzureLogger, setLogLevel, getLogLevel, createClientLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AzureLogger\", function() { return AzureLogger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLogLevel\", function() { return getLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createClientLogger\", function() { return createClientLogger; });\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug */ \"./node_modules/@azure/logger/dist-esm/src/debug.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = Object(_debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"azure\");\nAzureLogger.log = (...args) => {\n    _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\")\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].disable();\n        _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/@azure/logger/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/log.browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/log.browser.js ***!
  \****************************************************************/
/*! exports provided: log */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"log\", function() { return log; });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction log(...args) {\n    if (args.length > 0) {\n        const firstArg = String(args[0]);\n        if (firstArg.includes(\":error\")) {\n            console.error(...args);\n        }\n        else if (firstArg.includes(\":warning\")) {\n            console.warn(...args);\n        }\n        else if (firstArg.includes(\":info\")) {\n            console.info(...args);\n        }\n        else if (firstArg.includes(\":verbose\")) {\n            console.debug(...args);\n        }\n        else {\n            console.debug(...args);\n        }\n    }\n}\n//# sourceMappingURL=log.browser.js.map\n\n//# sourceURL=webpack:///./node_modules/@azure/logger/dist-esm/src/log.browser.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/context.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/context.js ***!
  \******************************************************************/
/*! exports provided: ContextAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContextAPI\", function() { return ContextAPI; });\n/* harmony import */ var _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/NoopContextManager */ \"./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js\");\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\n\n\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__[\"NoopContextManager\"]();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__[\"registerGlobal\"])(API_NAME, contextManager, _diag__WEBPACK_IMPORTED_MODULE_2__[\"DiagAPI\"].instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__[\"getGlobal\"])(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__[\"unregisterGlobal\"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_2__[\"DiagAPI\"].instance());\n    };\n    return ContextAPI;\n}());\n\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/api/context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/diag.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/diag.js ***!
  \***************************************************************/
/*! exports provided: DiagAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagAPI\", function() { return DiagAPI; });\n/* harmony import */ var _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../diag/ComponentLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js\");\n/* harmony import */ var _diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../diag/internal/logLevelLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js\");\n/* harmony import */ var _diag_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../diag/types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__[\"getGlobal\"])('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, args);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a, _b;\n            if (logLevel === void 0) { logLevel = _diag_types__WEBPACK_IMPORTED_MODULE_2__[\"DiagLogLevel\"].INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            var oldLogger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__[\"getGlobal\"])('diag');\n            var newLogger = Object(_diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__[\"createLogLevelDiagLogger\"])(logLevel, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger) {\n                var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__[\"registerGlobal\"])('diag', newLogger, self, true);\n        };\n        self.disable = function () {\n            Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__[\"unregisterGlobal\"])(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__[\"DiagComponentLogger\"](options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\n\n//# sourceMappingURL=diag.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/api/diag.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/propagation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/propagation.js ***!
  \**********************************************************************/
/*! exports provided: PropagationAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropagationAPI\", function() { return PropagationAPI; });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js\");\n/* harmony import */ var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js\");\n/* harmony import */ var _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baggage/context-helpers */ \"./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js\");\n/* harmony import */ var _baggage_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../baggage/utils */ \"./node_modules/@opentelemetry/api/build/esm/baggage/utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__[\"NoopTextMapPropagator\"]();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = _baggage_utils__WEBPACK_IMPORTED_MODULE_4__[\"createBaggage\"];\n        this.getBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__[\"getBaggage\"];\n        this.setBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__[\"setBaggage\"];\n        this.deleteBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__[\"deleteBaggage\"];\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"registerGlobal\"])(API_NAME, propagator, _diag__WEBPACK_IMPORTED_MODULE_5__[\"DiagAPI\"].instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__[\"defaultTextMapSetter\"]; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__[\"defaultTextMapGetter\"]; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"unregisterGlobal\"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_5__[\"DiagAPI\"].instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"getGlobal\"])(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\n\n//# sourceMappingURL=propagation.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/api/propagation.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/trace.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/trace.js ***!
  \****************************************************************/
/*! exports provided: TraceAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TraceAPI\", function() { return TraceAPI; });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js\");\n/* harmony import */ var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/* harmony import */ var _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../trace/context-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__[\"ProxyTracerProvider\"]();\n        this.wrapSpanContext = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__[\"wrapSpanContext\"];\n        this.isSpanContextValid = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__[\"isSpanContextValid\"];\n        this.deleteSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__[\"deleteSpan\"];\n        this.getSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__[\"getSpan\"];\n        this.getSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__[\"getSpanContext\"];\n        this.setSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__[\"setSpan\"];\n        this.setSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__[\"setSpanContext\"];\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"registerGlobal\"])(API_NAME, this._proxyTracerProvider, _diag__WEBPACK_IMPORTED_MODULE_4__[\"DiagAPI\"].instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"getGlobal\"])(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"unregisterGlobal\"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_4__[\"DiagAPI\"].instance());\n        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__[\"ProxyTracerProvider\"]();\n    };\n    return TraceAPI;\n}());\n\n//# sourceMappingURL=trace.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/api/trace.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js ***!
  \******************************************************************************/
/*! exports provided: getBaggage, setBaggage, deleteBaggage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaggage\", function() { return getBaggage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setBaggage\", function() { return setBaggage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteBaggage\", function() { return deleteBaggage; });\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = Object(_context_context__WEBPACK_IMPORTED_MODULE_0__[\"createContextKey\"])('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nfunction getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nfunction setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nfunction deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js ***!
  \************************************************************************************/
/*! exports provided: BaggageImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaggageImpl\", function() { return BaggageImpl; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\n\n//# sourceMappingURL=baggage-impl.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js ***!
  \******************************************************************************/
/*! exports provided: baggageEntryMetadataSymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baggageEntryMetadataSymbol\", function() { return baggageEntryMetadataSymbol; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nvar baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/types.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/baggage/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/utils.js ***!
  \********************************************************************/
/*! exports provided: createBaggage, baggageEntryMetadataFromString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBaggage\", function() { return createBaggage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baggageEntryMetadataFromString\", function() { return baggageEntryMetadataFromString; });\n/* harmony import */ var _api_diag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/* harmony import */ var _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/baggage-impl */ \"./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js\");\n/* harmony import */ var _internal_symbol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/symbol */ \"./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar diag = _api_diag__WEBPACK_IMPORTED_MODULE_0__[\"DiagAPI\"].instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nfunction createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__[\"BaggageImpl\"](new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nfunction baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: _internal_symbol__WEBPACK_IMPORTED_MODULE_2__[\"baggageEntryMetadataSymbol\"],\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/baggage/utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/common/Attributes.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/common/Attributes.js ***!
  \************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=Attributes.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/common/Attributes.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/common/Exception.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/common/Exception.js ***!
  \***********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=Exception.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/common/Exception.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/common/Time.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/common/Time.js ***!
  \******************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=Time.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/common/Time.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js ***!
  \*********************************************************************************/
/*! exports provided: NoopContextManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopContextManager\", function() { return NoopContextManager; });\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return _context__WEBPACK_IMPORTED_MODULE_0__[\"ROOT_CONTEXT\"];\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\n\n//# sourceMappingURL=NoopContextManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/context.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/context.js ***!
  \**********************************************************************/
/*! exports provided: createContextKey, ROOT_CONTEXT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createContextKey\", function() { return createContextKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROOT_CONTEXT\", function() { return ROOT_CONTEXT; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nfunction createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nvar ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/context/context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/types.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/context/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js ***!
  \***************************************************************************/
/*! exports provided: DiagComponentLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagComponentLogger\", function() { return DiagComponentLogger; });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\n\nfunction logProxy(funcName, namespace, args) {\n    var logger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__[\"getGlobal\"])('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, args);\n}\n//# sourceMappingURL=ComponentLogger.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js ***!
  \*************************************************************************/
/*! exports provided: DiagConsoleLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagConsoleLogger\", function() { return DiagConsoleLogger; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\n\n//# sourceMappingURL=consoleLogger.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/index.js ***!
  \*****************************************************************/
/*! exports provided: DiagConsoleLogger, DiagLogLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consoleLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consoleLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagConsoleLogger\", function() { return _consoleLogger__WEBPACK_IMPORTED_MODULE_0__[\"DiagConsoleLogger\"]; });\n\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagLogLevel\", function() { return _types__WEBPACK_IMPORTED_MODULE_1__[\"DiagLogLevel\"]; });\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/diag/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js ***!
  \***********************************************************************************/
/*! exports provided: createLogLevelDiagLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createLogLevelDiagLogger\", function() { return createLogLevelDiagLogger; });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].NONE) {\n        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].NONE;\n    }\n    else if (maxLevel > _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].ALL) {\n        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].ERROR),\n        warn: _filterFunc('warn', _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].WARN),\n        info: _filterFunc('info', _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].INFO),\n        debug: _filterFunc('debug', _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].DEBUG),\n        verbose: _filterFunc('verbose', _types__WEBPACK_IMPORTED_MODULE_0__[\"DiagLogLevel\"].VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/types.js ***!
  \*****************************************************************/
/*! exports provided: DiagLogLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagLogLevel\", function() { return DiagLogLevel; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nvar DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/diag/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/index.js ***!
  \************************************************************/
/*! exports provided: baggageEntryMetadataFromString, DiagConsoleLogger, DiagLogLevel, defaultTextMapGetter, defaultTextMapSetter, ProxyTracer, ProxyTracerProvider, SamplingDecision, SpanKind, SpanStatusCode, TraceFlags, createTraceState, isSpanContextValid, isValidTraceId, isValidSpanId, INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, createContextKey, ROOT_CONTEXT, context, trace, propagation, diag, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"context\", function() { return context; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trace\", function() { return trace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"propagation\", function() { return propagation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"diag\", function() { return diag; });\n/* harmony import */ var _baggage_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage/types */ \"./node_modules/@opentelemetry/api/build/esm/baggage/types.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _baggage_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baggage/utils */ \"./node_modules/@opentelemetry/api/build/esm/baggage/utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"baggageEntryMetadataFromString\", function() { return _baggage_utils__WEBPACK_IMPORTED_MODULE_1__[\"baggageEntryMetadataFromString\"]; });\n\n/* harmony import */ var _common_Exception__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/Exception */ \"./node_modules/@opentelemetry/api/build/esm/common/Exception.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _common_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/Time */ \"./node_modules/@opentelemetry/api/build/esm/common/Time.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _common_Attributes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/Attributes */ \"./node_modules/@opentelemetry/api/build/esm/common/Attributes.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/diag/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagConsoleLogger\", function() { return _diag__WEBPACK_IMPORTED_MODULE_5__[\"DiagConsoleLogger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagLogLevel\", function() { return _diag__WEBPACK_IMPORTED_MODULE_5__[\"DiagLogLevel\"]; });\n\n/* harmony import */ var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultTextMapGetter\", function() { return _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_6__[\"defaultTextMapGetter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultTextMapSetter\", function() { return _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_6__[\"defaultTextMapSetter\"]; });\n\n/* harmony import */ var _trace_attributes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./trace/attributes */ \"./node_modules/@opentelemetry/api/build/esm/trace/attributes.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_link__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./trace/link */ \"./node_modules/@opentelemetry/api/build/esm/trace/link.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trace/ProxyTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ProxyTracer\", function() { return _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_9__[\"ProxyTracer\"]; });\n\n/* harmony import */ var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ProxyTracerProvider\", function() { return _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_10__[\"ProxyTracerProvider\"]; });\n\n/* harmony import */ var _trace_Sampler__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trace/Sampler */ \"./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./trace/SamplingResult */ \"./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SamplingDecision\", function() { return _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_12__[\"SamplingDecision\"]; });\n\n/* harmony import */ var _trace_span_context__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./trace/span_context */ \"./node_modules/@opentelemetry/api/build/esm/trace/span_context.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_span_kind__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./trace/span_kind */ \"./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpanKind\", function() { return _trace_span_kind__WEBPACK_IMPORTED_MODULE_14__[\"SpanKind\"]; });\n\n/* harmony import */ var _trace_span__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./trace/span */ \"./node_modules/@opentelemetry/api/build/esm/trace/span.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_SpanOptions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./trace/SpanOptions */ \"./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_status__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./trace/status */ \"./node_modules/@opentelemetry/api/build/esm/trace/status.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpanStatusCode\", function() { return _trace_status__WEBPACK_IMPORTED_MODULE_17__[\"SpanStatusCode\"]; });\n\n/* harmony import */ var _trace_trace_flags__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./trace/trace_flags */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TraceFlags\", function() { return _trace_trace_flags__WEBPACK_IMPORTED_MODULE_18__[\"TraceFlags\"]; });\n\n/* harmony import */ var _trace_trace_state__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./trace/trace_state */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_internal_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./trace/internal/utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createTraceState\", function() { return _trace_internal_utils__WEBPACK_IMPORTED_MODULE_20__[\"createTraceState\"]; });\n\n/* harmony import */ var _trace_tracer_provider__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./trace/tracer_provider */ \"./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_tracer__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./trace/tracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/tracer.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_tracer_options__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./trace/tracer_options */ \"./node_modules/@opentelemetry/api/build/esm/trace/tracer_options.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSpanContextValid\", function() { return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_24__[\"isSpanContextValid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isValidTraceId\", function() { return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_24__[\"isValidTraceId\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isValidSpanId\", function() { return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_24__[\"isValidSpanId\"]; });\n\n/* harmony import */ var _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./trace/invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"INVALID_SPANID\", function() { return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_25__[\"INVALID_SPANID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"INVALID_TRACEID\", function() { return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_25__[\"INVALID_TRACEID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"INVALID_SPAN_CONTEXT\", function() { return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_25__[\"INVALID_SPAN_CONTEXT\"]; });\n\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createContextKey\", function() { return _context_context__WEBPACK_IMPORTED_MODULE_26__[\"createContextKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ROOT_CONTEXT\", function() { return _context_context__WEBPACK_IMPORTED_MODULE_26__[\"ROOT_CONTEXT\"]; });\n\n/* harmony import */ var _context_types__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./context/types */ \"./node_modules/@opentelemetry/api/build/esm/context/types.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _api_context__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./api/context */ \"./node_modules/@opentelemetry/api/build/esm/api/context.js\");\n/* harmony import */ var _api_trace__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./api/trace */ \"./node_modules/@opentelemetry/api/build/esm/api/trace.js\");\n/* harmony import */ var _api_propagation__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./api/propagation */ \"./node_modules/@opentelemetry/api/build/esm/api/propagation.js\");\n/* harmony import */ var _api_diag__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./api/diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Entrypoint for context API */\nvar context = _api_context__WEBPACK_IMPORTED_MODULE_28__[\"ContextAPI\"].getInstance();\n\n/** Entrypoint for trace API */\nvar trace = _api_trace__WEBPACK_IMPORTED_MODULE_29__[\"TraceAPI\"].getInstance();\n\n/** Entrypoint for propagation API */\nvar propagation = _api_propagation__WEBPACK_IMPORTED_MODULE_30__[\"PropagationAPI\"].getInstance();\n\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nvar diag = _api_diag__WEBPACK_IMPORTED_MODULE_31__[\"DiagAPI\"].instance();\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n});\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js ***!
  \****************************************************************************/
/*! exports provided: registerGlobal, getGlobal, unregisterGlobal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerGlobal\", function() { return registerGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGlobal\", function() { return getGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unregisterGlobal\", function() { return unregisterGlobal; });\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/esm/version.js\");\n/* harmony import */ var _semver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./semver */ \"./node_modules/@opentelemetry/api/build/esm/internal/semver.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar major = _version__WEBPACK_IMPORTED_MODULE_1__[\"VERSION\"].split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _platform__WEBPACK_IMPORTED_MODULE_0__[\"_globalThis\"];\nfunction registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: _version__WEBPACK_IMPORTED_MODULE_1__[\"VERSION\"],\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== _version__WEBPACK_IMPORTED_MODULE_1__[\"VERSION\"]) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + _version__WEBPACK_IMPORTED_MODULE_1__[\"VERSION\"] + \".\");\n    return true;\n}\nfunction getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !Object(_semver__WEBPACK_IMPORTED_MODULE_2__[\"isCompatible\"])(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nfunction unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + _version__WEBPACK_IMPORTED_MODULE_1__[\"VERSION\"] + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/internal/semver.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/internal/semver.js ***!
  \**********************************************************************/
/*! exports provided: _makeCompatibilityCheck, isCompatible */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_makeCompatibilityCheck\", function() { return _makeCompatibilityCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCompatible\", function() { return isCompatible; });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/esm/version.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nfunction _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nvar isCompatible = _makeCompatibilityCheck(_version__WEBPACK_IMPORTED_MODULE_0__[\"VERSION\"]);\n//# sourceMappingURL=semver.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/internal/semver.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js ***!
  \**********************************************************************************/
/*! exports provided: _globalThis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_globalThis\", function() { return _globalThis; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api-metrics and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nvar _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js ***!
  \*****************************************************************************/
/*! exports provided: _globalThis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _globalThis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_globalThis\", function() { return _globalThis__WEBPACK_IMPORTED_MODULE_0__[\"_globalThis\"]; });\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js ***!
  \****************************************************************************************/
/*! exports provided: NoopTextMapPropagator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopTextMapPropagator\", function() { return NoopTextMapPropagator; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\n\n//# sourceMappingURL=NoopTextMapPropagator.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js ***!
  \************************************************************************************/
/*! exports provided: defaultTextMapGetter, defaultTextMapSetter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultTextMapGetter\", function() { return defaultTextMapGetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultTextMapSetter\", function() { return defaultTextMapSetter; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nvar defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js ***!
  \*****************************************************************************/
/*! exports provided: NonRecordingSpan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NonRecordingSpan\", function() { return NonRecordingSpan; });\n/* harmony import */ var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__[\"INVALID_SPAN_CONTEXT\"]; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\n\n//# sourceMappingURL=NonRecordingSpan.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js ***!
  \***********************************************************************/
/*! exports provided: NoopTracer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopTracer\", function() { return NoopTracer; });\n/* harmony import */ var _api_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/context */ \"./node_modules/@opentelemetry/api/build/esm/api/context.js\");\n/* harmony import */ var _trace_context_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trace/context-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/* harmony import */ var _spancontext_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar context = _api_context__WEBPACK_IMPORTED_MODULE_0__[\"ContextAPI\"].getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__[\"NonRecordingSpan\"]();\n        }\n        var parentFromContext = context && Object(_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__[\"getSpanContext\"])(context);\n        if (isSpanContext(parentFromContext) &&\n            Object(_spancontext_utils__WEBPACK_IMPORTED_MODULE_3__[\"isSpanContextValid\"])(parentFromContext)) {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__[\"NonRecordingSpan\"](parentFromContext);\n        }\n        else {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__[\"NonRecordingSpan\"]();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = Object(_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__[\"setSpan\"])(parentContext, span);\n        return context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\n\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js ***!
  \*******************************************************************************/
/*! exports provided: NoopTracerProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopTracerProvider\", function() { return NoopTracerProvider; });\n/* harmony import */ var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n        return new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__[\"NoopTracer\"]();\n    };\n    return NoopTracerProvider;\n}());\n\n//# sourceMappingURL=NoopTracerProvider.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js ***!
  \************************************************************************/
/*! exports provided: ProxyTracer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProxyTracer\", function() { return ProxyTracer; });\n/* harmony import */ var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar NOOP_TRACER = new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__[\"NoopTracer\"]();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\n\n//# sourceMappingURL=ProxyTracer.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js ***!
  \********************************************************************************/
/*! exports provided: ProxyTracerProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProxyTracerProvider\", function() { return ProxyTracerProvider; });\n/* harmony import */ var _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProxyTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js\");\n/* harmony import */ var _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar NOOP_TRACER_PROVIDER = new _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__[\"NoopTracerProvider\"]();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__[\"ProxyTracer\"](this, name, version, options));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n    };\n    return ProxyTracerProvider;\n}());\n\n//# sourceMappingURL=ProxyTracerProvider.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=Sampler.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js ***!
  \***************************************************************************/
/*! exports provided: SamplingDecision */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SamplingDecision\", function() { return SamplingDecision; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js ***!
  \************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=SpanOptions.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/attributes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/attributes.js ***!
  \***********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=attributes.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/attributes.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js ***!
  \**************************************************************************/
/*! exports provided: getSpan, setSpan, deleteSpan, setSpanContext, getSpanContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpan\", function() { return getSpan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSpan\", function() { return setSpan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteSpan\", function() { return deleteSpan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSpanContext\", function() { return setSpanContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpanContext\", function() { return getSpanContext; });\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * span key\n */\nvar SPAN_KEY = Object(_context_context__WEBPACK_IMPORTED_MODULE_0__[\"createContextKey\"])('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nfunction getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nfunction setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nfunction deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return setSpan(context, new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__[\"NonRecordingSpan\"](spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nfunction getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js ***!
  \*************************************************************************************/
/*! exports provided: TraceStateImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TraceStateImpl\", function() { return TraceStateImpl; });\n/* harmony import */ var _tracestate_validators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracestate-validators */ \"./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceStateImpl = /** @class */ (function () {\n    function TraceStateImpl(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceStateImpl.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceStateImpl.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceStateImpl.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceStateImpl.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceStateImpl.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (Object(_tracestate_validators__WEBPACK_IMPORTED_MODULE_0__[\"validateKey\"])(key) && Object(_tracestate_validators__WEBPACK_IMPORTED_MODULE_0__[\"validateValue\"])(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceStateImpl.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceStateImpl.prototype._clone = function () {\n        var traceState = new TraceStateImpl();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceStateImpl;\n}());\n\n//# sourceMappingURL=tracestate-impl.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js ***!
  \*******************************************************************************************/
/*! exports provided: validateKey, validateValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateKey\", function() { return validateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateValue\", function() { return validateValue; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nfunction validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nfunction validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=tracestate-validators.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js ***!
  \***************************************************************************/
/*! exports provided: createTraceState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTraceState\", function() { return createTraceState; });\n/* harmony import */ var _tracestate_impl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracestate-impl */ \"./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction createTraceState(rawTraceState) {\n    return new _tracestate_impl__WEBPACK_IMPORTED_MODULE_0__[\"TraceStateImpl\"](rawTraceState);\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js ***!
  \***********************************************************************************/
/*! exports provided: INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INVALID_SPANID\", function() { return INVALID_SPANID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INVALID_TRACEID\", function() { return INVALID_TRACEID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INVALID_SPAN_CONTEXT\", function() { return INVALID_SPAN_CONTEXT; });\n/* harmony import */ var _trace_flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trace_flags */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar INVALID_SPANID = '0000000000000000';\nvar INVALID_TRACEID = '00000000000000000000000000000000';\nvar INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: _trace_flags__WEBPACK_IMPORTED_MODULE_0__[\"TraceFlags\"].NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/link.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/link.js ***!
  \*****************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=link.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/link.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span.js ***!
  \*****************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=span.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/span.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span_context.js ***!
  \*************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=span_context.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/span_context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js ***!
  \**********************************************************************/
/*! exports provided: SpanKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpanKind\", function() { return SpanKind; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js ***!
  \******************************************************************************/
/*! exports provided: isValidTraceId, isValidSpanId, isSpanContextValid, wrapSpanContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidTraceId\", function() { return isValidTraceId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidSpanId\", function() { return isValidSpanId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSpanContextValid\", function() { return isSpanContextValid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapSpanContext\", function() { return wrapSpanContext; });\n/* harmony import */ var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nfunction isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__[\"INVALID_TRACEID\"];\n}\nfunction isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__[\"INVALID_SPANID\"];\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nfunction isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nfunction wrapSpanContext(spanContext) {\n    return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__[\"NonRecordingSpan\"](spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/status.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/status.js ***!
  \*******************************************************************/
/*! exports provided: SpanStatusCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpanStatusCode\", function() { return SpanStatusCode; });\n/**\n * An enumeration of status codes.\n */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/status.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js ***!
  \************************************************************************/
/*! exports provided: TraceFlags */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TraceFlags\", function() { return TraceFlags; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js ***!
  \************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=trace_state.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/tracer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/tracer.js ***!
  \*******************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=tracer.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/tracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/tracer_options.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/tracer_options.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=tracer_options.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/tracer_options.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js ***!
  \****************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=tracer_provider.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/version.js ***!
  \**************************************************************/
/*! exports provided: VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nvar VERSION = '1.1.0';\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack:///./node_modules/@opentelemetry/api/build/esm/version.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/build/jwt-decode.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/jwt-decode/build/jwt-decode.esm.js ***!
  \*********************************************************/
/*! exports provided: default, InvalidTokenError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvalidTokenError\", function() { return n; });\nfunction e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";/* harmony default export */ __webpack_exports__[\"default\"] = (o);\n//# sourceMappingURL=jwt-decode.esm.js.map\n\n\n//# sourceURL=webpack:///./node_modules/jwt-decode/build/jwt-decode.esm.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __spreadArray, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet, __classPrivateFieldIn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__createBinding\", function() { return __createBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArray\", function() { return __spreadArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldIn\", function() { return __classPrivateFieldIn; });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/*! exports provided: v1, v3, v4, v5, NIL, version, validate, stringify, parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v1\", function() { return _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v3\", function() { return _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v4\", function() { return _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v5\", function() { return _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NIL\", function() { return _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"validate\", function() { return _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringify\", function() { return _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/index.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (md5);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/md5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ('00000000-0000-0000-0000-000000000000');\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/nil.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (parse);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/parse.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/regex.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return rng; });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/rng.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sha1);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/sha1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stringify);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/stringify.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (v1);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/v1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (v3);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/v3.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/*! exports provided: DNS, URL, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DNS\", function() { return DNS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URL\", function() { return URL; });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = Object(_parse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n});\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/v35.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (v4);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/v4.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (v5);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/v5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (validate);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/validate.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (version);\n\n//# sourceURL=webpack:///./node_modules/uuid/dist/esm-browser/version.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./ui.js":
/*!***************!*\
  !*** ./ui.js ***!
  \***************/
/*! exports provided: initUI, welcomeUser, renderToken */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initUI\", function() { return initUI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"welcomeUser\", function() { return welcomeUser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderToken\", function() { return renderToken; });\n/** DOM manipulation */\r\n\r\nconst initUI = function (signIn, signOut, displayToken) {\r\n    document.getElementById('callCteButton').addEventListener(\"click\", () => {\r\n        displayToken();\r\n    })\r\n    document.getElementById('signInBtn').addEventListener(\"click\", () => {\r\n        signIn();\r\n    });\r\n    document.getElementById('signOutBtn').addEventListener(\"click\", () => {\r\n        signOut();\r\n    });\r\n};\r\n\r\nconst welcomeUser = function (username) {\r\n\r\n    const welcomeDiv = document.getElementById('welcome-div');\r\n    welcomeDiv.innerHTML = `Logged in as ${username}!`\r\n    welcomeDiv.classList.remove('d-none');\r\n\r\n    document.getElementById('title-div').classList.add('d-none');\r\n    document.getElementById('card-content').classList.remove('d-none');\r\n\r\n\r\n    document.getElementById('signInBtn').classList.add('d-none');\r\n    document.getElementById('signOutBtn').classList.remove('d-none');\r\n    document.getElementById('callCteButton').classList.remove('d-none');\r\n}\r\n\r\nconst renderToken = function (token) {\r\n    const response = document.getElementById(\"response\");\r\n    response.replaceChildren(document.createTextNode('\\n' + JSON.stringify(token, null, 4) + '\\n'));\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./ui.js?");

/***/ })

/******/ });